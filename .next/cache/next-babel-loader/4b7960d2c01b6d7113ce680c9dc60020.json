{"ast":null,"code":"import { all, fork, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nexport function* loginSaga() {\n  try {\n    const data = JSON.parse(localStorage.getItem('ikimina'));\n    yield put(loginSuccess(data.data, data.accessToken));\n    modalSuccess('success');\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":null,"metadata":{},"sourceType":"module"}