{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ContainerDefault from '~/components/layouts/ContainerDefault';\nimport TableProductBrandsItems from '~/components/shared/tables/TableProductBrandsItems';\nimport FormCreateProductBrands from '~/components/shared/forms/FormCreateProductBrands';\nimport FormSearchSimple from '~/components/shared/forms/FormSearchSimple';\nimport HeaderDashboard from '~/components/shared/headers/HeaderDashboard';\nimport { connect, useDispatch } from 'react-redux';\nimport { toggleDrawerMenu } from '~/store/app/action';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\n\nconst ProductBrandsPage = () => {\n  const dispatch = useDispatch();\n  const {\n    0: productBrands,\n    1: setProductBrands\n  } = useState([]);\n  const {\n    0: selectedBrand,\n    1: setSelectedBrand\n  } = useState({});\n\n  const initializeProductBrands = async () => {\n    const parentCats = await ProductBrandRepository.findAll();\n    setProductBrands([...parentCats.result]);\n  };\n\n  const handleEdit = async param => {\n    const foundBrand = await ProductBrandRepository.findById(param);\n    console.log(foundBrand);\n    setSelectedBrand(_objectSpread({}, foundBrand.result));\n  };\n\n  const handleDelete = async param => {\n    await ProductBrandRepository.deleteProductBrand(param);\n    initializeProductBrands();\n  };\n\n  useEffect(() => {\n    dispatch(toggleDrawerMenu(false));\n    initializeProductBrands();\n  }, []);\n  return /*#__PURE__*/_jsxs(ContainerDefault, {\n    children: [/*#__PURE__*/_jsx(HeaderDashboard, {\n      title: \"Brands\",\n      description: \"Product/Brand\"\n    }), /*#__PURE__*/_jsxs(\"section\", {\n      className: \"ps-dashboard ps-items-listing\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"ps-section__left\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"ps-section__header\",\n          children: /*#__PURE__*/_jsx(FormSearchSimple, {})\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"ps-section__content\",\n          children: /*#__PURE__*/_jsx(TableProductBrandsItems, {\n            handleEdit: handleEdit,\n            handleDelete: handleDelete,\n            productBrands: productBrands,\n            initializeProductBrands: initializeProductBrands\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"ps-section__right\",\n        children: /*#__PURE__*/_jsx(FormCreateProductBrands, {\n          selectedBrand: selectedBrand,\n          initializeProductBrands: initializeProductBrands\n        })\n      })]\n    })]\n  });\n};\n\nexport default connect(state => state.app)(ProductBrandsPage);","map":null,"metadata":{},"sourceType":"module"}