{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/shared/forms/FormAccountSettings.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport UserRepository from '~/repositories/UserRepository';\nimport VendorRepository from '~/repositories/VendorRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport CardImageUploader from '../cards/CardImageUploader';\n\nconst FormAccountSettings = ({\n  user\n}) => {\n  const [selectedUser, setSelectedUser] = React.useState({\n    id: null,\n    phoneNumber: '',\n    names: '',\n    address: '',\n    logo: '',\n    vendorId: user.id,\n    slug: '',\n    user: {\n      name: '',\n      username: '',\n      email: '',\n      category: ''\n    }\n  });\n\n  const handleSubmitUpdateSelectedUser = async () => {\n    //convert selectedUser data into formData with logo file\n    const formData = new FormData();\n    formData.append('id', selectedUser.id);\n    formData.append('phoneNumber', selectedUser.phoneNumber);\n    formData.append('names', selectedUser.names);\n    formData.append('address', selectedUser.address);\n    formData.append('logo', selectedUser.logo);\n    formData.append('slug', selectedUser.slug); //update user\n\n    switch (selectedUser.user.category) {\n      case 'VENDOR':\n        formData.append('vendorId', selectedUser.vendorId);\n        const response = await VendorRepository.updateVendor(formData, user.accessToken);\n\n        if (!response.error) {\n          if (response) {\n            setSelectedUser(response.result);\n            openNotification('Success Message', 'Vendor updated successfully', 'success');\n          }\n        } else {\n          openNotification('Error Message', response.error, 'error');\n        }\n\n        break;\n\n      case 'CUSTOMER':\n        const responseCustomer = await UserRepository.updateCustomer(formData, user.accessToken);\n\n        if (!responseCustomer.error) {\n          if (responseCustomer) {\n            setSelectedUser(responseCustomer.result);\n            openNotification('Success Message', 'Customer updated successfully', 'success');\n          }\n        } else {\n          openNotification('Error Message', responseCustomer.error, 'error');\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    fetchUser();\n  };\n\n  const fetchUser = async () => {\n    const response = await UserRepository.getProfile(user.data.user.id, user.accessToken);\n\n    if (!response.error) {\n      if (response) setSelectedUser(response.result);\n    } else {\n      openNotification('Error Message', response.error, 'error');\n    }\n  };\n\n  const handleSetLogo = logo => {\n    setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n      logo: logo[0].originFileObj\n    }));\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ps-form--account-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardImageUploader, {\n        onChange: handleSetLogo,\n        number: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              names: e.target.value\n            })),\n            value: selectedUser.names\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Display Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            disabled: true,\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              user: _objectSpread(_objectSpread({}, selectedUser.user), {}, {\n                name: e.target.value\n              })\n            })),\n            value: selectedUser.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              user: _objectSpread(_objectSpread({}, selectedUser.user), {}, {\n                email: e.target.value\n              })\n            })),\n            value: selectedUser.user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              phoneNumber: e.target.value\n            })),\n            value: selectedUser.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            disabled: true,\n            value: selectedUser.user.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              address: e.target.value\n            })),\n            value: selectedUser.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"6\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-form__submit text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ps-btn ps-btn--gray mr-3\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmitUpdateSelectedUser,\n        className: \"ps-btn success\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\nexport default FormAccountSettings;","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/shared/forms/FormAccountSettings.jsx"],"names":["React","useEffect","UserRepository","VendorRepository","openNotification","CardImageUploader","FormAccountSettings","user","selectedUser","setSelectedUser","useState","id","phoneNumber","names","address","logo","vendorId","slug","name","username","email","category","handleSubmitUpdateSelectedUser","formData","FormData","append","response","updateVendor","accessToken","error","result","responseCustomer","updateCustomer","fetchUser","getProfile","data","handleSetLogo","originFileObj","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport UserRepository from '~/repositories/UserRepository';\nimport VendorRepository from  '~/repositories/VendorRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport CardImageUploader from '../cards/CardImageUploader';\n\nconst FormAccountSettings = ({ user }) => {\n    const [selectedUser, setSelectedUser] = React.useState({id:null,phoneNumber: '',names:'',address:'',logo:'',vendorId:user.id,slug:'',user: {name: '',username: '',email: '',category: ''}});\n    const handleSubmitUpdateSelectedUser = async () => {\n        //convert selectedUser data into formData with logo file\n        const formData = new FormData();\n        formData.append('id', selectedUser.id);\n        formData.append('phoneNumber', selectedUser.phoneNumber);\n        formData.append('names', selectedUser.names);\n        formData.append('address', selectedUser.address);\n        formData.append('logo', selectedUser.logo);\n        formData.append('slug', selectedUser.slug);\n        //update user\n\n\n\n        switch (selectedUser.user.category) {\n            case 'VENDOR':\n                formData.append('vendorId', selectedUser.vendorId);\n                const response = await VendorRepository.updateVendor(formData, user.accessToken);\n                if(!response.error){\n                    if(response){\n                        setSelectedUser(response.result);\n                        openNotification('Success Message', 'Vendor updated successfully','success');\n                    }\n                }else{\n                    openNotification('Error Message', response.error,'error');\n                } \n                break;\n            case 'CUSTOMER':\n                const responseCustomer = await UserRepository.updateCustomer(formData, user.accessToken);\n                if(!responseCustomer.error){\n                    if(responseCustomer){\n                        setSelectedUser(responseCustomer.result);\n                        openNotification('Success Message', 'Customer updated successfully','success');\n                    }\n                }else{\n                    openNotification('Error Message', responseCustomer.error,'error');\n                }\n                break;\n            default:\n                break;\n        }\n        fetchUser();\n    };\n    const fetchUser = async () => {\n        const response = await UserRepository.getProfile(user.data.user.id, user.accessToken);\n        if(!response.error){\n            if(response)\n                setSelectedUser(response.result);\n        }else{\n            openNotification('Error Message', response.error,'error');\n        }\n    };\n    const handleSetLogo = (logo) => {\n        setSelectedUser({...selectedUser,logo:logo[0].originFileObj});\n    };\n    useEffect(() => {\n        fetchUser();\n    }, [user]);\n    return (\n        <form className=\"ps-form--account-settings\">\n            <div>\n                <label>Display Name</label> \n                <CardImageUploader onChange={handleSetLogo} number={1} />\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label>Full Name</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            onInput={e=>setSelectedUser({...selectedUser,names:e.target.value})}\n                            value={selectedUser.names}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label>Display Name</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            disabled\n                            onInput={e=>setSelectedUser({...selectedUser,user:{...selectedUser.user,name:e.target.value}})}\n                            value={selectedUser.user.username}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label>Email</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            onInput={e=>setSelectedUser({...selectedUser,user:{...selectedUser.user,email:e.target.value}})}\n                            value={selectedUser.user.email}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            onInput={e=>setSelectedUser({...selectedUser,phoneNumber:e.target.value})}\n                            value={selectedUser.phoneNumber}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label>Role</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            disabled\n                            value={selectedUser.user.category}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label>Address</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            onInput={e=>setSelectedUser({...selectedUser,address:e.target.value})}\n                            value={selectedUser.address}\n                        />\n                    </div>\n                </div>\n               \n                <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                        <label>Bio</label>\n                        <textarea\n                            className=\"form-control\"\n                            rows=\"6\"\n                            placeholder=\"\"></textarea>\n                    </div>\n                </div>\n            </div>\n            <div className=\"ps-form__submit text-center\">\n                <button className=\"ps-btn ps-btn--gray mr-3\">Cancel</button>\n                <button type='button' onClick={handleSubmitUpdateSelectedUser} className=\"ps-btn success\">Update Profile</button>\n            </div>\n        </form>\n    );\n};\n\nexport default FormAccountSettings;\n"]},"metadata":{},"sourceType":"module"}