{"ast":null,"code":"import _classCallCheck from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/partials/vendors/create.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport VendorRepository from '~/repositories/VendorRepository';\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (values) {\n      VendorRepository.updateVendor(values).then(function (res) {\n        if (res.error) {\n          openNotification('Error Message', res.error, 'error');\n        } else {\n          openNotification('Success Message', res.message, 'success');\n        }\n      });\n    });\n\n    _this.state = {\n      vendor: _this.props.vendor\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ps-my-account\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"ps-form--account\",\n            onFinish: function onFinish(e) {\n              return _this2.handleSubmit(e);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ps-tab active\",\n              id: \"register\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ps-form__content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Register An Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"names\",\n                    rules: [{\n                      required: true,\n                      message: 'Please input your Name!'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"names\",\n                      value: this.state.vendor.names,\n                      onChange: function onChange(e) {\n                        return _this2.setState({\n                          vendor: _objectSpread(_objectSpread({}, _this2.state.vendor), {}, {\n                            names: e.target.value\n                          })\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"email\",\n                    rules: [{\n                      required: true,\n                      message: 'Please input your email!'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: \"form-control\",\n                      type: \"email\",\n                      placeholder: \"Email address\",\n                      value: this.state.vendor.email,\n                      onChange: function onChange(e) {\n                        return _this2.setState({\n                          vendor: _objectSpread(_objectSpread({}, _this2.state.vendor), {}, {\n                            email: e.target.value\n                          })\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"phoneNumber\",\n                    rules: [{\n                      required: true,\n                      message: 'Please input your phone number!'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: \"form-control\",\n                      type: \"tel\",\n                      placeholder: \"Phone number\",\n                      value: this.state.vendor.phoneNumber,\n                      onChange: function onChange(e) {\n                        return _this2.setState({\n                          vendor: _objectSpread(_objectSpread({}, _this2.state.vendor), {}, {\n                            phoneNumber: e.target.value\n                          })\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"username\",\n                    rules: [{\n                      required: true,\n                      message: 'Please input your username!'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"User name\",\n                      value: this.state.vendor.username,\n                      onChange: function onChange(e) {\n                        return _this2.setState({\n                          vendor: _objectSpread(_objectSpread({}, _this2.state.vendor), {}, {\n                            username: e.target.value\n                          })\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"address\",\n                    rules: [{\n                      required: true,\n                      message: 'Please input your address!'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"Address\",\n                      value: this.state.vendor.address,\n                      onChange: function onChange(e) {\n                        return _this2.setState({\n                          vendor: _objectSpread(_objectSpread({}, _this2.state.vendor), {}, {\n                            address: e.target.value\n                          })\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group submit\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"ps-btn ps-btn--fullwidth\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state.auth;\n};\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/partials/vendors/create.jsx"],"names":["React","Component","Form","Input","connect","openNotification","VendorRepository","Register","props","values","updateVendor","then","res","error","message","state","vendor","e","handleSubmit","required","names","setState","target","value","email","phoneNumber","username","address","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Form, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport VendorRepository from '~/repositories/VendorRepository';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            vendor: this.props.vendor,\n        }\n    }\n\n    handleSubmit = values => {\n        VendorRepository.updateVendor(values).then((res) => {\n            if (res.error) {\n                openNotification('Error Message',res.error, 'error')\n            } else {\n                openNotification('Success Message',res.message, 'success')\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"ps-my-account\">\n                <div className=\"container\">\n                    <Form\n                        className=\"ps-form--account\"\n                        onFinish={e=>this.handleSubmit(e)}>\n                        <div className=\"ps-tab active\" id=\"register\">\n                            <div className=\"ps-form__content\">\n                                <h5>Register An Account</h5>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"names\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your Name!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            placeholder=\"names\"\n                                            value={this.state.vendor.names}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, names: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"email\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your email!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"email\"\n                                            placeholder=\"Email address\"\n                                            value={this.state.vendor.email}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, email: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"phoneNumber\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your phone number!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"tel\"\n                                            placeholder=\"Phone number\"\n                                            value={this.state.vendor.phoneNumber}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, phoneNumber: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"username\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your username!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            placeholder=\"User name\"\n                                            value={this.state.vendor.username}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, username: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"address\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your address!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            placeholder=\"Address\"\n                                            value={this.state.vendor.address}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, address: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group submit\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"ps-btn ps-btn--fullwidth\">\n                                        Update\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return state.auth;\n};\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}