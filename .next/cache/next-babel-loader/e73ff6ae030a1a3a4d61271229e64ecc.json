{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\n\nclass CategoryRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async findTopCategory() {\n    return await Repository.get(`${baseUrl}/category/findTopCategory`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async findCategoryByParentId(parentId) {\n    return await Repository.get(`${baseUrl}/category/findCategoryByParentId{parentId}?parentId=${parentId}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async findById(categoryId) {\n    return await Repository.get(`${baseUrl}/category/findCategoryById{categoryId}?categoryId=${categoryId}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async saveCategory(payload) {\n    return await Repository.post(`${baseUrl}/category/save`, payload).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n}\n\nexport default new CategoryRepository();","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/repositories/CategoryRepository.js"],"names":["Repository","baseUrl","CategoryRepository","constructor","callback","findTopCategory","get","then","response","data","catch","error","JSON","stringify","message","findCategoryByParentId","parentId","findById","categoryId","saveCategory","payload","post"],"mappings":"AAAA,OAAOA,UAAP,IAAoBC,OAApB,QAAkC,cAAlC;;AAEA,MAAMC,kBAAN,CAAyB;AACrBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAED,QAAMC,eAAN,GAAwB;AACpB,WAAO,MAAML,UAAU,CAACM,GAAX,CAAgB,GAAEL,OAAQ,2BAA1B,EACZM,IADY,CACNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHY,EAIZC,KAJY,CAILC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CAJM,CAAb;AAKH;;AAED,QAAMC,sBAAN,CAA6BC,QAA7B,EAAuC;AACnC,WAAO,MAAMhB,UAAU,CAACM,GAAX,CAAgB,GAAEL,OAAQ,uDAAsDe,QAAS,EAAzF,EACZT,IADY,CACNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHY,EAIZC,KAJY,CAILC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CAJM,CAAb;AAKH;;AAED,QAAMG,QAAN,CAAeC,UAAf,EAA2B;AACvB,WAAO,MAAMlB,UAAU,CAACM,GAAX,CAAgB,GAAEL,OAAQ,qDAAoDiB,UAAW,EAAzF,EACZX,IADY,CACNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHY,EAIZC,KAJY,CAILC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CAJM,CAAb;AAKH;;AAED,QAAMK,YAAN,CAAmBC,OAAnB,EAA2B;AACvB,WAAO,MAAMpB,UAAU,CAACqB,IAAX,CAAiB,GAAEpB,OAAQ,gBAA3B,EAA2CmB,OAA3C,EACZb,IADY,CACNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHY,EAIZC,KAJY,CAILC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CAJM,CAAb;AAKH;;AAnCoB;;AAsCzB,eAAe,IAAIZ,kBAAJ,EAAf","sourcesContent":["import Repository, {baseUrl} from './Repository';\n\nclass CategoryRepository {\n    constructor(callback) {\n        this.callback = callback;\n    }\n\n    async findTopCategory() {\n        return await Repository.get(`${baseUrl}/category/findTopCategory`)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n\n    async findCategoryByParentId(parentId) {\n        return await Repository.get(`${baseUrl}/category/findCategoryByParentId{parentId}?parentId=${parentId}`)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n\n    async findById(categoryId) {\n        return await Repository.get(`${baseUrl}/category/findCategoryById{categoryId}?categoryId=${categoryId}`)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n\n    async saveCategory(payload){\n        return await Repository.post(`${baseUrl}/category/save`,payload)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n}\n\nexport default new CategoryRepository();\n"]},"metadata":{},"sourceType":"module"}