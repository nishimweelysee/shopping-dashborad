{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/shared/forms/FormCreateProductBrands.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\n\nvar FormCreateProductBrands = function FormCreateProductBrands(props) {\n  _s();\n\n  var _useState = useState(_objectSpread({}, props.selectedBrand)),\n      productBrand = _useState[0],\n      setProductBrand = _useState[1];\n\n  var handleSaveProductBrand = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(props);\n              _context.next = 3;\n              return ProductBrandRepository.saveProductBrand(productBrand, props.auth.user.accessToken);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.error) {\n                _context.next = 7;\n                break;\n              }\n\n              openNotification(\"Success Message\", res.messages && res.messages[0], \"success\");\n              return _context.abrupt(\"return\", props.initializeProductBrands());\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSaveProductBrand() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (props.selectedBrand) {\n      setProductBrand(_objectSpread({}, props.selectedBrand));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ps-form ps-form--new\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-form__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: productBrand.name,\n          onInput: function onInput(e) {\n            return setProductBrand(_objectSpread(_objectSpread({}, productBrand), {}, {\n              name: e.target.value\n            }));\n          },\n          type: \"text\",\n          placeholder: \"Enter productBrand name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Slug\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: productBrand.slug,\n          onInput: function onInput(e) {\n            return setProductBrand(_objectSpread(_objectSpread({}, productBrand), {}, {\n              slug: e.target.value\n            }));\n          },\n          type: \"text\",\n          placeholder: \"Enter productBrand slug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-form__bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ps-btn ps-btn--gray\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ps-btn ps-btn--sumbit success\",\n        type: \"button\",\n        onClick: handleSaveProductBrand,\n        children: productBrand.id == null ? \"Add new\" : \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FormCreateProductBrands, \"BhoNyuG0oH2RuXkHqggkayVvzN4=\");\n\n_c = FormCreateProductBrands;\nexport default FormCreateProductBrands;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCreateProductBrands\");","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/shared/forms/FormCreateProductBrands.jsx"],"names":["React","useEffect","useState","ProductBrandRepository","openNotification","FormCreateProductBrands","props","selectedBrand","productBrand","setProductBrand","handleSaveProductBrand","console","log","saveProductBrand","auth","user","accessToken","res","error","messages","initializeProductBrands","name","e","target","value","slug","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\n\nconst FormCreateProductBrands = (props) => {\n    const[productBrand,setProductBrand] = useState({...props.selectedBrand});\n    const handleSaveProductBrand = async()=>{\n        console.log(props)\n        const res = await ProductBrandRepository.saveProductBrand(productBrand,props.auth.user.accessToken);\n        if(!res.error){\n            openNotification(\"Success Message\",res.messages && res.messages[0],\"success\");\n            return props.initializeProductBrands();\n        }\n    }\n    useEffect(()=>{\n        if(props.selectedBrand){\n            setProductBrand({...props.selectedBrand})\n        }\n    },[])\n    return (\n        <form className=\"ps-form ps-form--new\" >\n            <div className=\"ps-form__content\">\n                <div className=\"form-group\">\n                    <label>\n                        Name<sup>*</sup>\n                    </label>\n                    <input\n                        className=\"form-control\"\n                        value={productBrand.name}\n                        onInput={e=>setProductBrand({...productBrand,name:e.target.value})}\n                        type=\"text\"\n                        placeholder=\"Enter productBrand name\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Slug<sup>*</sup>\n                    </label>\n                    <input\n                        className=\"form-control\"\n                        value={productBrand.slug}\n                        onInput={e=>setProductBrand({...productBrand,slug:e.target.value})}\n                        type=\"text\"\n                        placeholder=\"Enter productBrand slug\"\n                    />\n                </div>\n            </div>\n            <div className=\"ps-form__bottom\">\n                <button className=\"ps-btn ps-btn--gray\">Reset</button>\n                <button className=\"ps-btn ps-btn--sumbit success\" type='button' onClick={handleSaveProductBrand}>\n                    {productBrand.id==null?\"Add new\":\"Update\"}\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default FormCreateProductBrands;\n"]},"metadata":{},"sourceType":"module"}