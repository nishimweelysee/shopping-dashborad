{"ast":null,"code":"import _defineProperty from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/pages/products/create-product.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ContainerDefault from '~/components/layouts/ContainerDefault';\nimport HeaderDashboard from '~/components/shared/headers/HeaderDashboard';\nimport { connect, useDispatch } from 'react-redux';\nimport { toggleDrawerMenu } from '~/store/app/action';\nimport CategoryRepository from '~/repositories/CategoryRepository';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { route } from 'next/dist/next-server/server/router';\nimport router, { useRouter } from 'next/router';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport ProductRepository from '~/repositories/ProductRepository';\nimport { Form, Input, notification } from 'antd';\nimport CardImageUploader from '~/components/shared/cards/CardImageUploader';\nimport _ from 'lodash';\n\nvar CreateProductPage = function CreateProductPage(_ref) {\n  _s();\n\n  var auth = _ref.auth,\n      app = _ref.app,\n      props = _objectWithoutProperties(_ref, [\"auth\", \"app\"]);\n\n  var dispatch = useDispatch();\n  var route = useRouter();\n\n  var _useState = useState({\n    title: \"dasd\",\n    slug: \"\",\n    salePrice: 0,\n    price: 0,\n    vendorId: auth.use && auth.user.data ? auth.user.data.id : null,\n    isHot: false,\n    isFeatured: false,\n    isOutOfStock: false,\n    isActive: false,\n    categoryId: null,\n    brandId: null,\n    manufacturer: \"\",\n    productImages: null,\n    id: null\n  }),\n      product = _useState[0],\n      setProduct = _useState[1];\n\n  var _useState2 = useState([]),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var _useState3 = useState([]),\n      brands = _useState3[0],\n      setBrands = _useState3[1];\n\n  var initializeCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var categories;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return CategoryRepository.findTopCategory();\n\n            case 2:\n              categories = _context.sent;\n              setCategories(_toConsumableArray(categories.result));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function initializeCategories() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var initializeBrands = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var brands;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ProductBrandRepository.findAll();\n\n            case 2:\n              brands = _context2.sent;\n              setBrands(_toConsumableArray(brands.result));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function initializeBrands() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var formData, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!product.id) {\n                delete product.id;\n              } //create a formData from a state and add images\n\n\n              formData = new FormData();\n              Object.keys(product).forEach(function (key) {\n                if (key === \"productImages\") {\n                  if (product.productImages) {\n                    for (var i = 0; i < product.productImages.length; i++) {\n                      formData.append(\"productImages\", product.productImages[i]);\n                    }\n                  }\n                } else {\n                  formData.append(key, product[key]);\n                }\n              });\n              _context3.next = 5;\n              return ProductRepository.saveProduct(formData, auth.user.accessToken);\n\n            case 5:\n              result = _context3.sent;\n\n              if (!result.error) {\n                router.push('/products');\n              } else {\n                openNotification(\"Error Message\", result.error, \"error\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var initializeProduct = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var fProduct;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!route.query.productId) {\n                _context4.next = 6;\n                break;\n              }\n\n              _context4.next = 3;\n              return ProductRepository.findById(route.query.productId);\n\n            case 3:\n              fProduct = _context4.sent;\n              console.log(fProduct.result);\n\n              if (!fProduct.error) {\n                setProduct(_objectSpread(_objectSpread({}, product), fProduct.result));\n              }\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function initializeProduct() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleSetLogo = function handleSetLogo(logo) {\n    var files = _.map(logo, 'originFileObj');\n\n    setProduct(_objectSpread(_objectSpread({}, product), {}, {\n      productImages: files\n    }));\n  };\n\n  useEffect(function () {\n    dispatch(toggleDrawerMenu(false));\n    initializeCategories();\n    initializeBrands();\n    initializeProduct();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContainerDefault, {\n    title: \"Create new product\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderDashboard, {\n      title: \"Create Product\",\n      description: \"Cyamunara Create New Product \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ps-new-item\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        initialValues: _objectSpread({}, product),\n        className: \"ps-form ps-form--new-product\",\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ps-form__content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"ps-block--form-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"figcaption\", {\n                  children: \"General\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ps-block__content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Product Name\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 61\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"title\",\n                      rules: [{\n                        required: true,\n                        message: 'Please type Product name!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        placeholder: \"Enter product name...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Reference\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 58\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"slug\",\n                      rules: [{\n                        required: true,\n                        message: 'Please type Slug!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        value: product.slug,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            slug: e.target.value\n                          }));\n                        },\n                        placeholder: \"Enter product Reference...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Regular Price\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 62\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"price\",\n                      rules: [{\n                        required: true,\n                        message: 'Enter price!'\n                      }, {\n                        min: 0,\n                        message: 'Minmum price is 0!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"number\",\n                        placeholder: \"\",\n                        value: product.price,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            price: e.target.value\n                          }));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Sale Price\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 59\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"salePrice\",\n                      rules: [{\n                        required: true,\n                        min: 0,\n                        message: 'Enter sale price!'\n                      }, {\n                        min: 0,\n                        message: 'Minmum price is 0!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"number\",\n                        placeholder: \"\",\n                        value: product.salePrice,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            salePrice: e.target.value\n                          }));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group d-flex\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                      label: \"Is Hot\",\n                      name: \"isHot\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"checkbox\",\n                        className: \"form-control\",\n                        checked: product.isHot,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            isHot: e.target.checked\n                          }));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      label: \"Is Featured\",\n                      name: \"isFeatured\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"checkbox\",\n                        className: \"form-control\",\n                        checked: product.isFeatured,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            isFeatured: e.target.checked\n                          }));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      label: \"Is Active\",\n                      name: \"isActive\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"checkbox\",\n                        checked: product.isActive,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            isActive: e.target.checked\n                          }));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Product Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"description\",\n                      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        className: \"form-control\",\n                        rows: \"6\",\n                        name: \"editordata\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"ps-block--form-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"figcaption\", {\n                  children: \"Other info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ps-block__content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"categoryId\",\n                      rules: [{\n                        required: true,\n                        message: 'Select Product category!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-control\",\n                        value: product.categoryId,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            categoryId: e.target.value\n                          }));\n                        },\n                        title: \"Status\",\n                        children: categories.map(function (category, index) {\n                          return /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: category.id,\n                            children: category.name\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 234,\n                            columnNumber: 68\n                          }, _this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Brand\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"brandId\",\n                      rules: [{\n                        required: true,\n                        message: 'Select Product Brand!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-control\",\n                        value: product.brandId,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            brandId: e.target.value\n                          }));\n                        },\n                        title: \"Brand\",\n                        children: brands.map(function (brand, index) {\n                          return /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: brand.id,\n                            children: [\" \", brand.name]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 61\n                          }, _this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Manufacturer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"manufacturer\",\n                      rules: [{\n                        required: true,\n                        message: 'Enter Product Manufacturer!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"text\",\n                        placeholder: \"Enter manufacturer...\",\n                        value: product.manufacturer,\n                        onChange: function onChange(e) {\n                          return setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                            manufacturer: e.target.value\n                          }));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Product Gallery\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group--nest\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(CardImageUploader, {\n                          multiple: true,\n                          onChange: handleSetLogo,\n                          number: 8\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ps-form__bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"ps-btn ps-btn--black\",\n            href: \"/products\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ps-btn ps-btn--gray\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ps-btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CreateProductPage, \"Mkw0OPhjYdP0lXemuPfXeew1csQ=\", false, function () {\n  return [useDispatch, useRouter];\n});\n\n_c = CreateProductPage;\nexport default connect(function (state) {\n  return state;\n})(CreateProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProductPage\");","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/pages/products/create-product.jsx"],"names":["React","useEffect","useState","ContainerDefault","HeaderDashboard","connect","useDispatch","toggleDrawerMenu","CategoryRepository","ProductBrandRepository","route","router","useRouter","openNotification","ProductRepository","Form","Input","notification","CardImageUploader","_","CreateProductPage","auth","app","props","dispatch","title","slug","salePrice","price","vendorId","use","user","data","id","isHot","isFeatured","isOutOfStock","isActive","categoryId","brandId","manufacturer","productImages","product","setProduct","categories","setCategories","brands","setBrands","initializeCategories","findTopCategory","result","initializeBrands","findAll","handleSubmit","e","formData","FormData","Object","keys","forEach","key","i","length","append","saveProduct","accessToken","error","push","initializeProduct","query","productId","findById","fProduct","console","log","handleSetLogo","logo","files","map","required","message","target","value","min","checked","category","index","name","brand","state"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,KAAT,QAAsB,qCAAtB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,QAA0C,MAA1C;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6B;AAAA;;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAZC,KAAY;;AACnD,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,MAAMI,KAAK,GAAGE,SAAS,EAAvB;;AAFmD,kBAGrBV,QAAQ,CAAC;AACnCuB,IAAAA,KAAK,EAAE,MAD4B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,SAAS,EAAE,CAHwB;AAInCC,IAAAA,KAAK,EAAE,CAJ4B;AAKnCC,IAAAA,QAAQ,EAAGR,IAAI,CAACS,GAAL,IAAYT,IAAI,CAACU,IAAL,CAAUC,IAAvB,GAA8BX,IAAI,CAACU,IAAL,CAAUC,IAAV,CAAeC,EAA7C,GAAiD,IALxB;AAMnCC,IAAAA,KAAK,EAAE,KAN4B;AAOnCC,IAAAA,UAAU,EAAE,KAPuB;AAQnCC,IAAAA,YAAY,EAAE,KARqB;AASnCC,IAAAA,QAAQ,EAAE,KATyB;AAUnCC,IAAAA,UAAU,EAAE,IAVuB;AAWnCC,IAAAA,OAAO,EAAE,IAX0B;AAYnCC,IAAAA,YAAY,EAAE,EAZqB;AAanCC,IAAAA,aAAa,EAAE,IAboB;AAcnCR,IAAAA,EAAE,EAAE;AAd+B,GAAD,CAHa;AAAA,MAG5CS,OAH4C;AAAA,MAGnCC,UAHmC;;AAAA,mBAmBfzC,QAAQ,CAAC,EAAD,CAnBO;AAAA,MAmB5C0C,UAnB4C;AAAA,MAmBhCC,aAnBgC;;AAAA,mBAoBvB3C,QAAQ,CAAC,EAAD,CApBe;AAAA,MAoB5C4C,MApB4C;AAAA,MAoBpCC,SApBoC;;AAsBnD,MAAMC,oBAAoB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAxC,kBAAkB,CAACyC,eAAnB,EADA;;AAAA;AACnBL,cAAAA,UADmB;AAEzBC,cAAAA,aAAa,oBAAKD,UAAU,CAACM,MAAhB,EAAb;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBF,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAKA,MAAMG,gBAAgB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA1C,sBAAsB,CAAC2C,OAAvB,EADA;;AAAA;AACfN,cAAAA,MADe;AAErBC,cAAAA,SAAS,oBAAKD,MAAM,CAACI,MAAZ,EAAT;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBC,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAKA,MAAME,YAAY;AAAA,yEAAG,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB,kBAAI,CAACZ,OAAO,CAACT,EAAb,EAAiB;AACb,uBAAOS,OAAO,CAACT,EAAf;AACH,eAHgB,CAIjB;;;AACMsB,cAAAA,QALW,GAKA,IAAIC,QAAJ,EALA;AAMjBC,cAAAA,MAAM,CAACC,IAAP,CAAYhB,OAAZ,EAAqBiB,OAArB,CAA6B,UAACC,GAAD,EAAS;AAClC,oBAAIA,GAAG,KAAK,eAAZ,EAA6B;AACzB,sBAAIlB,OAAO,CAACD,aAAZ,EAA2B;AACvB,yBAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,OAAO,CAACD,aAAR,CAAsBqB,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACnDN,sBAAAA,QAAQ,CAACQ,MAAT,CAAgB,eAAhB,EAAiCrB,OAAO,CAACD,aAAR,CAAsBoB,CAAtB,CAAjC;AACH;AACJ;AACJ,iBAND,MAMO;AACHN,kBAAAA,QAAQ,CAACQ,MAAT,CAAgBH,GAAhB,EAAqBlB,OAAO,CAACkB,GAAD,CAA5B;AACH;AACJ,eAVD;AANiB;AAAA,qBAiBI9C,iBAAiB,CAACkD,WAAlB,CAA8BT,QAA9B,EAAwClC,IAAI,CAACU,IAAL,CAAUkC,WAAlD,CAjBJ;;AAAA;AAiBXf,cAAAA,MAjBW;;AAkBjB,kBAAI,CAACA,MAAM,CAACgB,KAAZ,EAAmB;AACfvD,gBAAAA,MAAM,CAACwD,IAAP,CAAY,WAAZ;AACH,eAFD,MAEO;AACHtD,gBAAAA,gBAAgB,CAAC,eAAD,EAAkBqC,MAAM,CAACgB,KAAzB,EAAgC,OAAhC,CAAhB;AACH;;AAtBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZb,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAwBA,MAAMe,iBAAiB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAClB1D,KAAK,CAAC2D,KAAN,CAAYC,SADM;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEKxD,iBAAiB,CAACyD,QAAlB,CAA2B7D,KAAK,CAAC2D,KAAN,CAAYC,SAAvC,CAFL;;AAAA;AAEZE,cAAAA,QAFY;AAGlBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACtB,MAArB;;AACA,kBAAI,CAACsB,QAAQ,CAACN,KAAd,EAAqB;AACjBvB,gBAAAA,UAAU,iCAAMD,OAAN,GAAkB8B,QAAQ,CAACtB,MAA3B,EAAV;AACH;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBkB,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAUA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC5B,QAAMC,KAAK,GAAG1D,CAAC,CAAC2D,GAAF,CAAMF,IAAN,EAAY,eAAZ,CAAd;;AACAjC,IAAAA,UAAU,iCAAMD,OAAN;AAAeD,MAAAA,aAAa,EAAEoC;AAA9B,OAAV;AACH,GAHD;;AAKA5E,EAAAA,SAAS,CAAC,YAAM;AACZuB,IAAAA,QAAQ,CAACjB,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAyC,IAAAA,oBAAoB;AACpBG,IAAAA,gBAAgB;AAChBiB,IAAAA,iBAAiB;AACpB,GALQ,EAKN,EALM,CAAT;AAMA,sBACI,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,oBAAxB;AAAA,4BACI,QAAC,eAAD;AACI,MAAA,KAAK,EAAC,gBADV;AAEI,MAAA,WAAW,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,aAAa,oBAAO1B,OAAP,CAAnB;AACI,QAAA,SAAS,EAAC,8BADd;AAC6C,QAAA,QAAQ,EAAEW,YADvD;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,8CAAf;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,oBAAlB;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAK,kBAAA,SAAS,EAAC,mBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,8DACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADhB;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAII,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,OADT;AAEI,sBAAA,KAAK,EAAE,CACH;AACI0B,wBAAAA,QAAQ,EAAE,IADd;AAEIC,wBAAAA,OAAO,EACH;AAHR,uBADG,CAFX;AAAA,6CASI,QAAC,KAAD;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,IAAI,EAAC,MAFT;AAGI,wBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,6BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAqBI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,2DACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADb;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAKI,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,MADT;AAEI,sBAAA,KAAK,EAAE,CACH;AACID,wBAAAA,QAAQ,EAAE,IADd;AAEIC,wBAAAA,OAAO,EACH;AAHR,uBADG,CAFX;AAAA,6CASI,QAAC,KAAD;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,IAAI,EAAC,MAFT;AAGI,wBAAA,KAAK,EAAEtC,OAAO,CAAChB,IAHnB;AAII,wBAAA,QAAQ,EAAE,kBAAC4B,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAehB,4BAAAA,IAAI,EAAE4B,CAAC,CAAC2B,MAAF,CAASC;AAA9B,6BAAjB;AAAA,yBAJd;AAKI,wBAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,6BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BArBJ,eA6CI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,+DACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADjB;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAKI,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,OADT;AAEI,sBAAA,KAAK,EAAE,CACH;AAAEH,wBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,wBAAAA,OAAO,EAAE;AAA3B,uBADG,EAC2C;AAAEG,wBAAAA,GAAG,EAAE,CAAP;AAAUH,wBAAAA,OAAO,EAAE;AAAnB,uBAD3C,CAFX;AAAA,6CAKI,QAAC,KAAD;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,IAAI,EAAC,QAFT;AAGI,wBAAA,WAAW,EAAC,EAHhB;AAII,wBAAA,KAAK,EAAEtC,OAAO,CAACd,KAJnB;AAKI,wBAAA,QAAQ,EAAE,kBAAC0B,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAed,4BAAAA,KAAK,EAAE0B,CAAC,CAAC2B,MAAF,CAASC;AAA/B,6BAAjB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,6BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BA7CJ,eAgEI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,4DACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADd;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAII,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,WADT;AAEI,sBAAA,KAAK,EAAE,CACH;AAAEH,wBAAAA,QAAQ,EAAE,IAAZ;AAAkBI,wBAAAA,GAAG,EAAE,CAAvB;AAA0BH,wBAAAA,OAAO,EAAE;AAAnC,uBADG,EACwD;AAAEG,wBAAAA,GAAG,EAAE,CAAP;AAAUH,wBAAAA,OAAO,EAAE;AAAnB,uBADxD,CAFX;AAAA,6CAKI,QAAC,KAAD;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,IAAI,EAAC,QAFT;AAGI,wBAAA,WAAW,EAAC,EAHhB;AAII,wBAAA,KAAK,EAAEtC,OAAO,CAACf,SAJnB;AAKI,wBAAA,QAAQ,EAAE,kBAAC2B,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAef,4BAAAA,SAAS,EAAE2B,CAAC,CAAC2B,MAAF,CAASC;AAAnC,6BAAjB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,6BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhEJ,eAkFI;AAAK,oBAAA,SAAS,EAAC,mBAAf;AAAA,4CACI,QAAC,IAAD,CAAM,IAAN;AAAW,sBAAA,KAAK,EAAC,QAAjB;AAA0B,sBAAA,IAAI,EAAC,OAA/B;AAAA,6CACI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,UAAZ;AAAuB,wBAAA,SAAS,EAAC,cAAjC;AAAgD,wBAAA,OAAO,EAAExC,OAAO,CAACR,KAAjE;AAAwE,wBAAA,QAAQ,EAAE,kBAACoB,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAeR,4BAAAA,KAAK,EAAEoB,CAAC,CAAC2B,MAAF,CAASG;AAA/B,6BAAjB;AAAA;AAAlF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,6BADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAW,sBAAA,KAAK,EAAC,aAAjB;AAA+B,sBAAA,IAAI,EAAC,YAApC;AAAA,6CACI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,UAAZ;AAAuB,wBAAA,SAAS,EAAC,cAAjC;AAAgD,wBAAA,OAAO,EAAE1C,OAAO,CAACP,UAAjE;AAA6E,wBAAA,QAAQ,EAAE,kBAACmB,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAeP,4BAAAA,UAAU,EAAEmB,CAAC,CAAC2B,MAAF,CAASG;AAApC,6BAAjB;AAAA;AAAvF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,6BAJJ,eAOI,QAAC,IAAD,CAAM,IAAN;AAAW,sBAAA,KAAK,EAAC,WAAjB;AAA6B,sBAAA,IAAI,EAAC,UAAlC;AAAA,6CACI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,UAAZ;AAAuB,wBAAA,OAAO,EAAE1C,OAAO,CAACL,QAAxC;AAAkD,wBAAA,QAAQ,EAAE,kBAACiB,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAeL,4BAAAA,QAAQ,EAAEiB,CAAC,CAAC2B,MAAF,CAASG;AAAlC,6BAAjB;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,6BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlFJ,eA6FI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,sBAAA,IAAI,EAAC,aAAhB;AAAA,6CACI;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,IAAI,EAAC,GAFT;AAGI,wBAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BA7FJ;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,qBADJ,eA6GI;AAAK,cAAA,SAAS,EAAC,8CAAf;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,oBAAlB;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAK,kBAAA,SAAS,EAAC,mBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,YADT;AAEI,sBAAA,KAAK,EAAE,CACH;AACIL,wBAAAA,QAAQ,EAAE,IADd;AAEIC,wBAAAA,OAAO,EACH;AAHR,uBADG,CAFX;AAAA,6CASI;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,KAAK,EAAEtC,OAAO,CAACJ,UAFnB;AAGI,wBAAA,QAAQ,EAAE,kBAACgB,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAeJ,4BAAAA,UAAU,EAAEgB,CAAC,CAAC2B,MAAF,CAASC;AAApC,6BAAjB;AAAA,yBAHd;AAII,wBAAA,KAAK,EAAC,QAJV;AAAA,kCAMQtC,UAAU,CAACkC,GAAX,CAAe,UAACO,QAAD,EAAWC,KAAX,EAAqB;AAChC,8CAAO;AAAoB,4BAAA,KAAK,EAAED,QAAQ,CAACpD,EAApC;AAAA,sCAAyCoD,QAAQ,CAACE;AAAlD,6BAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,mCAAP;AACH,yBAFD;AANR;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAyBI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,SADT;AAEI,sBAAA,KAAK,EAAE,CACH;AACIP,wBAAAA,QAAQ,EAAE,IADd;AAEIC,wBAAAA,OAAO,EACH;AAHR,uBADG,CAFX;AAAA,6CASI;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,KAAK,EAAEtC,OAAO,CAACH,OAFnB;AAGI,wBAAA,QAAQ,EAAE,kBAACe,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAeH,4BAAAA,OAAO,EAAEe,CAAC,CAAC2B,MAAF,CAASC;AAAjC,6BAAjB;AAAA,yBAHd;AAII,wBAAA,KAAK,EAAC,OAJV;AAAA,kCAMQpC,MAAM,CAACgC,GAAP,CAAW,UAACU,KAAD,EAAQF,KAAR;AAAA,8CACP;AAAoB,4BAAA,KAAK,EAAEE,KAAK,CAACvD,EAAjC;AAAA,4CAAuCuD,KAAK,CAACD,IAA7C;AAAA,6BAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,mCADO;AAAA,yBAAX;AANR;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAzBJ,eAiDI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AACI,sBAAA,IAAI,EAAC,cADT;AAEI,sBAAA,KAAK,EAAE,CACH;AACIP,wBAAAA,QAAQ,EAAE,IADd;AAEIC,wBAAAA,OAAO,EACH;AAHR,uBADG,CAFX;AAAA,6CASI;AACI,wBAAA,SAAS,EAAC,cADd;AAEI,wBAAA,IAAI,EAAC,MAFT;AAGI,wBAAA,WAAW,EAAC,uBAHhB;AAII,wBAAA,KAAK,EAAEtC,OAAO,CAACF,YAJnB;AAKI,wBAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,iCAAOX,UAAU,iCAAMD,OAAN;AAAeF,4BAAAA,YAAY,EAAEc,CAAC,CAAC2B,MAAF,CAASC;AAAtC,6BAAjB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAjDJ,eAqEI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,kBAAf;AAAA,6CAUI;AAAA,+CACI,QAAC,iBAAD;AAAmB,0BAAA,QAAQ,EAAE,IAA7B;AAAmC,0BAAA,QAAQ,EAAEP,aAA7C;AAA4D,0BAAA,MAAM,EAAE;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BArEJ;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,qBA7GJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAFJ,eA8MI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,sBADd;AAEI,YAAA,IAAI,EAAC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAMI;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eAOI;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAA2B,YAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBA9MJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkOH,CA/SD;;GAAMvD,iB;UACed,W,EACHM,S;;;KAFZQ,iB;AAgTN,eAAef,OAAO,CAAC,UAACoF,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0BrE,iBAA1B,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ContainerDefault from '~/components/layouts/ContainerDefault';\nimport HeaderDashboard from '~/components/shared/headers/HeaderDashboard';\nimport { connect, useDispatch } from 'react-redux';\nimport { toggleDrawerMenu } from '~/store/app/action';\nimport CategoryRepository from '~/repositories/CategoryRepository';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { route } from 'next/dist/next-server/server/router';\nimport router, { useRouter } from 'next/router';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport ProductRepository from '~/repositories/ProductRepository';\nimport { Form, Input, notification } from 'antd';\nimport CardImageUploader from '~/components/shared/cards/CardImageUploader';\nimport _ from 'lodash';\n\nconst CreateProductPage = ({ auth, app, ...props }) => {\n    const dispatch = useDispatch();\n    const route = useRouter();\n    const [product, setProduct] = useState({\n        title: \"dasd\",\n        slug: \"\",\n        salePrice: 0,\n        price: 0,\n        vendorId: (auth.use && auth.user.data)? auth.user.data.id: null,\n        isHot: false,\n        isFeatured: false,\n        isOutOfStock: false,\n        isActive: false,\n        categoryId: null,\n        brandId: null,\n        manufacturer: \"\",\n        productImages: null,\n        id: null\n    });\n    const [categories, setCategories] = useState([]);\n    const [brands, setBrands] = useState([]);\n\n    const initializeCategories = async () => {\n        const categories = await CategoryRepository.findTopCategory();\n        setCategories([...categories.result]);\n    };\n\n    const initializeBrands = async () => {\n        const brands = await ProductBrandRepository.findAll();\n        setBrands([...brands.result]);\n    };\n\n    const handleSubmit = async (e) => {\n        if (!product.id) {\n            delete product.id;\n        }\n        //create a formData from a state and add images\n        const formData = new FormData();\n        Object.keys(product).forEach((key) => {\n            if (key === \"productImages\") {\n                if (product.productImages) {\n                    for (let i = 0; i < product.productImages.length; i++) {\n                        formData.append(\"productImages\", product.productImages[i]);\n                    }\n                }\n            } else {\n                formData.append(key, product[key]);\n            }\n        });\n        const result = await ProductRepository.saveProduct(formData, auth.user.accessToken);\n        if (!result.error) {\n            router.push('/products');\n        } else {\n            openNotification(\"Error Message\", result.error, \"error\")\n        }\n    };\n    const initializeProduct = async () => {\n        if (route.query.productId) {\n            const fProduct = await ProductRepository.findById(route.query.productId);\n            console.log(fProduct.result);\n            if (!fProduct.error) {\n                setProduct({ ...product, ...fProduct.result });\n            }\n        }\n    }\n\n    const handleSetLogo = (logo) => {\n        const files = _.map(logo, 'originFileObj');\n        setProduct({ ...product, productImages: files });\n    };\n\n    useEffect(() => {\n        dispatch(toggleDrawerMenu(false));\n        initializeCategories();\n        initializeBrands();\n        initializeProduct();\n    }, []);\n    return (\n        <ContainerDefault title=\"Create new product\">\n            <HeaderDashboard\n                title=\"Create Product\"\n                description=\"Cyamunara Create New Product \"\n            />\n            <section className=\"ps-new-item\">\n                <Form initialValues={{ ...product }}\n                    className=\"ps-form ps-form--new-product\" onFinish={handleSubmit}>\n                    <div className=\"ps-form__content\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\n                                <figure className=\"ps-block--form-box\">\n                                    <figcaption>General</figcaption>\n                                    <div className=\"ps-block__content\">\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Product Name<sup>*</sup>\n                                            </label>\n                                            <Form.Item\n                                                name=\"title\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Please type Product name!',\n                                                    },\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    placeholder=\"Enter product name...\"\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Reference<sup>*</sup>\n                                            </label>\n\n                                            <Form.Item\n                                                name=\"slug\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Please type Slug!',\n                                                    },\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    value={product.slug}\n                                                    onChange={(e) => setProduct({ ...product, slug: e.target.value })}\n                                                    placeholder=\"Enter product Reference...\"\n                                                />\n                                            </Form.Item>\n\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Regular Price<sup>*</sup>\n                                            </label>\n\n                                            <Form.Item\n                                                name=\"price\"\n                                                rules={[\n                                                    { required: true, message: 'Enter price!', }, { min: 0, message: 'Minmum price is 0!' },\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"number\"\n                                                    placeholder=\"\"\n                                                    value={product.price}\n                                                    onChange={(e) => setProduct({ ...product, price: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Sale Price<sup>*</sup>\n                                            </label>\n                                            <Form.Item\n                                                name=\"salePrice\"\n                                                rules={[\n                                                    { required: true, min: 0, message: 'Enter sale price!', }, { min: 0, message: 'Minmum price is 0!' }\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"number\"\n                                                    placeholder=\"\"\n                                                    value={product.salePrice}\n                                                    onChange={(e) => setProduct({ ...product, salePrice: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group d-flex\">\n                                            <Form.Item label=\"Is Hot\" name=\"isHot\">\n                                                <Input type=\"checkbox\" className=\"form-control\" checked={product.isHot} onChange={(e) => setProduct({ ...product, isHot: e.target.checked })} />\n                                            </Form.Item>\n                                            <Form.Item label=\"Is Featured\" name=\"isFeatured\">\n                                                <Input type=\"checkbox\" className='form-control' checked={product.isFeatured} onChange={(e) => setProduct({ ...product, isFeatured: e.target.checked })} />\n                                            </Form.Item>\n                                            <Form.Item label=\"Is Active\" name=\"isActive\">\n                                                <Input type=\"checkbox\" checked={product.isActive} onChange={(e) => setProduct({ ...product, isActive: e.target.checked })} />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Product Description</label>\n                                            <Form.Item name=\"description\">\n                                                <textarea\n                                                    className=\"form-control\"\n                                                    rows=\"6\"\n                                                    name=\"editordata\"></textarea>\n                                            </Form.Item>\n                                        </div>\n                                    </div>\n                                </figure>\n                            </div>\n                            <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\n                                <figure className=\"ps-block--form-box\">\n                                    <figcaption>Other info</figcaption>\n                                    <div className=\"ps-block__content\">\n                                        <div className=\"form-group\">\n                                            <label>Category</label>\n                                            <Form.Item\n                                                name=\"categoryId\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Select Product category!',\n                                                    },\n                                                ]}>\n                                                <select\n                                                    className=\"form-control\"\n                                                    value={product.categoryId}\n                                                    onChange={(e) => setProduct({ ...product, categoryId: e.target.value })}\n                                                    title=\"Status\">\n                                                    {\n                                                        categories.map((category, index) => {\n                                                            return <option key={index} value={category.id}>{category.name}</option>\n                                                        })\n                                                    }\n                                                </select>\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Brand</label>\n                                            <Form.Item\n                                                name=\"brandId\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Select Product Brand!',\n                                                    },\n                                                ]}>\n                                                <select\n                                                    className=\"form-control\"\n                                                    value={product.brandId}\n                                                    onChange={(e) => setProduct({ ...product, brandId: e.target.value })}\n                                                    title=\"Brand\">\n                                                    {\n                                                        brands.map((brand, index) => (\n                                                            <option key={index} value={brand.id}> {brand.name}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Manufacturer</label>\n                                            <Form.Item\n                                                name=\"manufacturer\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Enter Product Manufacturer!',\n                                                    },\n                                                ]}>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    placeholder=\"Enter manufacturer...\"\n                                                    value={product.manufacturer}\n                                                    onChange={(e) => setProduct({ ...product, manufacturer: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Product Gallery</label>\n                                            <div className=\"form-group--nest\">\n                                                {/* <input\n                                                    className=\"form-control\"\n                                                    type=\"file\"\n                                                    multiple={true}\n                                                    onChange={(e) => setProduct({ ...product, productImages: e.target.files })}\n                                                />\n                                                <button className=\"ps-btn ps-btn--sm\">\n                                                    Choose\n                                                </button> */}\n                                                <div>\n                                                    <CardImageUploader multiple={true} onChange={handleSetLogo} number={8} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </figure>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"ps-form__bottom\">\n                        <a\n                            className=\"ps-btn ps-btn--black\"\n                            href=\"/products\">\n                            Back\n                        </a>\n                        <button className=\"ps-btn ps-btn--gray\">Cancel</button>\n                        <button className=\"ps-btn\" type='submit'>Submit</button>\n                    </div>\n                </Form>\n            </section>\n        </ContainerDefault>\n    );\n};\nexport default connect((state) => state)(CreateProductPage);"]},"metadata":{},"sourceType":"module"}