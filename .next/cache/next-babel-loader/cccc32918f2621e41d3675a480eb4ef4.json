{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Repository, { baseUrl } from './Repository';\n\nvar CategoryRepository = /*#__PURE__*/function () {\n  function CategoryRepository(callback) {\n    _classCallCheck(this, CategoryRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(CategoryRepository, [{\n    key: \"findTopCategory\",\n    value: function () {\n      var _findTopCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/category/findTopCategory\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error.message)\n                  };\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function findTopCategory() {\n        return _findTopCategory.apply(this, arguments);\n      }\n\n      return findTopCategory;\n    }()\n  }, {\n    key: \"findCategoryByParentId\",\n    value: function () {\n      var _findCategoryByParentId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(parentId) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/category/findCategoryByParentId{parentId}?parentId=\").concat(parentId)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error.message)\n                  };\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function findCategoryByParentId(_x) {\n        return _findCategoryByParentId.apply(this, arguments);\n      }\n\n      return findCategoryByParentId;\n    }()\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(categoryId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/category/findCategoryById{categoryId}?categoryId=\").concat(categoryId)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error.message)\n                  };\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function findById(_x2) {\n        return _findById.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }, {\n    key: \"saveCategory\",\n    value: function () {\n      var _saveCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(payload) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(payload);\n                _context4.next = 3;\n                return Repository.post(\"\".concat(baseUrl, \"/category/save\"), payload).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error.message)\n                  };\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function saveCategory(_x3) {\n        return _saveCategory.apply(this, arguments);\n      }\n\n      return saveCategory;\n    }()\n  }]);\n\n  return CategoryRepository;\n}();\n\nexport default new CategoryRepository();","map":null,"metadata":{},"sourceType":"module"}