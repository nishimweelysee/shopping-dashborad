{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\n\nclass UserRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async register(payload) {\n    return await Repository.post(`${baseUrl}/vendor/signup`, payload).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async login(payload) {\n    return await Repository.post(`${baseUrl}/auth/login`, payload).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  } //get user profile by id with token\n\n\n  async getProfile(id, token) {\n    console.log(id, token);\n    return await Repository.get(`${baseUrl}/user/findUserInfo{userId}?userId=${id}`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n}\n\nexport default new UserRepository();","map":null,"metadata":{},"sourceType":"module"}