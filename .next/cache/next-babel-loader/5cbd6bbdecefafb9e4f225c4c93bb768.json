{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/pages/products/create-product.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ContainerDefault from '~/components/layouts/ContainerDefault';\nimport HeaderDashboard from '~/components/shared/headers/HeaderDashboard';\nimport { connect, useDispatch } from 'react-redux';\nimport { toggleDrawerMenu } from '~/store/app/action';\nimport CategoryRepository from '~/repositories/CategoryRepository';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { route } from 'next/dist/next-server/server/router';\nimport router, { useRouter } from 'next/router';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport ProductRepository from '~/repositories/ProductRepository';\nimport { Form, Input, notification } from 'antd';\nimport CardImageUploader from '~/components/shared/cards/CardImageUploader';\nimport _ from 'lodash';\n\nconst CreateProductPage = (_ref) => {\n  let {\n    auth,\n    app\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"auth\", \"app\"]);\n\n  const dispatch = useDispatch();\n  const route = useRouter();\n  const {\n    0: product,\n    1: setProduct\n  } = useState({\n    title: \"\",\n    slug: \"\",\n    salePrice: 0,\n    price: 0,\n    vendorId: auth.use && auth.user.data ? auth.user.data.id : null,\n    isHot: false,\n    isFeatured: false,\n    isOutOfStock: false,\n    isActive: false,\n    categoryId: null,\n    brandId: null,\n    manufacturer: \"\",\n    productImages: null,\n    id: null\n  });\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: brands,\n    1: setBrands\n  } = useState([]);\n\n  const initializeCategories = async () => {\n    const categories = await CategoryRepository.findTopCategory();\n    setCategories([...categories.result]);\n  };\n\n  const initializeBrands = async () => {\n    const brands = await ProductBrandRepository.findAll();\n    setBrands([...brands.result]);\n  };\n\n  const handleSubmit = async e => {\n    if (!product.id) {\n      delete product.id;\n    } //create a formData from a state and add images\n\n\n    const formData = new FormData();\n    Object.keys(product).forEach(key => {\n      if (key === \"productImages\") {\n        if (product.productImages) {\n          for (let i = 0; i < product.productImages.length; i++) {\n            formData.append(\"productImages\", product.productImages[i]);\n          }\n        }\n      } else {\n        formData.append(key, product[key]);\n      }\n    });\n    const result = await ProductRepository.saveProduct(formData, auth.user.accessToken);\n\n    if (!result.error) {\n      router.push('/products');\n    } else {\n      openNotification(\"Error Message\", result.error, \"error\");\n    }\n  };\n\n  const initializeProduct = async () => {\n    if (route.query.productId) {\n      const fProduct = await ProductRepository.findById(route.query.productId);\n      console.log(fProduct.result);\n\n      if (!fProduct.error) {\n        setProduct(_objectSpread(_objectSpread({}, product), fProduct.result));\n      }\n    }\n  };\n\n  const handleSetLogo = logo => {\n    const files = _.map(logo, 'originFileObj');\n\n    setProduct(_objectSpread(_objectSpread({}, product), {}, {\n      productImages: files\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(toggleDrawerMenu(false));\n    initializeCategories();\n    initializeBrands();\n    initializeProduct();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContainerDefault, {\n    title: \"Create new product\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderDashboard, {\n      title: \"Create Product\",\n      description: \"Cyamunara Create New Product \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ps-new-item\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"ps-form ps-form--new-product\",\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ps-form__content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"ps-block--form-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"figcaption\", {\n                  children: \"General\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ps-block__content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Product Name\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"title\",\n                      rules: [{\n                        required: true,\n                        message: 'Please type Product name!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        placeholder: \"Enter product name...\",\n                        initialValues: product.title,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          title: e.target.value\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Reference\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 58\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"slug\",\n                      rules: [{\n                        required: true,\n                        message: 'Please type Slug!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        value: product.slug,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          slug: e.target.value\n                        })),\n                        placeholder: \"Enter product Reference...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Regular Price\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 62\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"price\",\n                      rules: [{\n                        required: true,\n                        message: 'Enter price!'\n                      }, {\n                        min: 0,\n                        message: 'Minmum price is 0!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"number\",\n                        placeholder: \"\",\n                        value: product.price,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          price: e.target.value\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Sale Price\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 59\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"salePrice\",\n                      rules: [{\n                        required: true,\n                        min: 0,\n                        message: 'Enter sale price!'\n                      }, {\n                        min: 0,\n                        message: 'Minmum price is 0!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        className: \"form-control\",\n                        type: \"number\",\n                        placeholder: \"\",\n                        value: product.salePrice,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          salePrice: e.target.value\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group d-flex\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                      label: \"Is Hot\",\n                      name: \"isHot\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"checkbox\",\n                        className: \"form-control\",\n                        checked: product.isHot,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          isHot: e.target.checked\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      label: \"Is Featured\",\n                      name: \"isFeatured\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"checkbox\",\n                        className: \"form-control\",\n                        checked: product.isFeatured,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          isFeatured: e.target.checked\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      label: \"Is Active\",\n                      name: \"isActive\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"checkbox\",\n                        checked: product.isActive,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          isActive: e.target.checked\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Product Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"description\",\n                      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        className: \"form-control\",\n                        rows: \"6\",\n                        name: \"editordata\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"ps-block--form-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"figcaption\", {\n                  children: \"Other info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ps-block__content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"categoryId\",\n                      rules: [{\n                        required: true,\n                        message: 'Select Product category!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-control\",\n                        value: product.categoryId,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          categoryId: e.target.value\n                        })),\n                        title: \"Status\",\n                        children: categories.map((category, index) => {\n                          return /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: category.id,\n                            children: category.name\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 68\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Brand\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"brandId\",\n                      rules: [{\n                        required: true,\n                        message: 'Select Product Brand!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-control\",\n                        value: product.brandId,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          brandId: e.target.value\n                        })),\n                        title: \"Brand\",\n                        children: brands.map((brand, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: brand.id,\n                          children: [\" \", brand.name]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 260,\n                          columnNumber: 61\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Manufacturer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"manufacturer\",\n                      rules: [{\n                        required: true,\n                        message: 'Enter Product Manufacturer!'\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"text\",\n                        placeholder: \"Enter manufacturer...\",\n                        value: product.manufacturer,\n                        onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                          manufacturer: e.target.value\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Product Gallery\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group--nest\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(CardImageUploader, {\n                          multiple: true,\n                          onChange: handleSetLogo,\n                          number: 8\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ps-form__bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"ps-btn ps-btn--black\",\n            href: \"/products\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ps-btn ps-btn--gray\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ps-btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\nexport default connect(state => state)(CreateProductPage);","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/pages/products/create-product.jsx"],"names":["React","useEffect","useState","ContainerDefault","HeaderDashboard","connect","useDispatch","toggleDrawerMenu","CategoryRepository","ProductBrandRepository","route","router","useRouter","openNotification","ProductRepository","Form","Input","notification","CardImageUploader","_","CreateProductPage","auth","app","props","dispatch","product","setProduct","title","slug","salePrice","price","vendorId","use","user","data","id","isHot","isFeatured","isOutOfStock","isActive","categoryId","brandId","manufacturer","productImages","categories","setCategories","brands","setBrands","initializeCategories","findTopCategory","result","initializeBrands","findAll","handleSubmit","e","formData","FormData","Object","keys","forEach","key","i","length","append","saveProduct","accessToken","error","push","initializeProduct","query","productId","fProduct","findById","console","log","handleSetLogo","logo","files","map","required","message","target","value","min","checked","category","index","name","brand","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ContainerDefault from '~/components/layouts/ContainerDefault';\nimport HeaderDashboard from '~/components/shared/headers/HeaderDashboard';\nimport { connect, useDispatch } from 'react-redux';\nimport { toggleDrawerMenu } from '~/store/app/action';\nimport CategoryRepository from '~/repositories/CategoryRepository';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { route } from 'next/dist/next-server/server/router';\nimport router, { useRouter } from 'next/router';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport ProductRepository from '~/repositories/ProductRepository';\nimport { Form, Input, notification } from 'antd';\nimport CardImageUploader from '~/components/shared/cards/CardImageUploader';\nimport _ from 'lodash';\n\nconst CreateProductPage = ({ auth, app, ...props }) => {\n    const dispatch = useDispatch();\n    const route = useRouter();\n    const [product, setProduct] = useState({\n        title: \"\",\n        slug: \"\",\n        salePrice: 0,\n        price: 0,\n        vendorId: (auth.use && auth.user.data)? auth.user.data.id: null,\n        isHot: false,\n        isFeatured: false,\n        isOutOfStock: false,\n        isActive: false,\n        categoryId: null,\n        brandId: null,\n        manufacturer: \"\",\n        productImages: null,\n        id: null\n    });\n    const [categories, setCategories] = useState([]);\n    const [brands, setBrands] = useState([]);\n\n    const initializeCategories = async () => {\n        const categories = await CategoryRepository.findTopCategory();\n        setCategories([...categories.result]);\n    };\n\n    const initializeBrands = async () => {\n        const brands = await ProductBrandRepository.findAll();\n        setBrands([...brands.result]);\n    };\n\n    const handleSubmit = async (e) => {\n        if (!product.id) {\n            delete product.id;\n        }\n        //create a formData from a state and add images\n        const formData = new FormData();\n        Object.keys(product).forEach((key) => {\n            if (key === \"productImages\") {\n                if (product.productImages) {\n                    for (let i = 0; i < product.productImages.length; i++) {\n                        formData.append(\"productImages\", product.productImages[i]);\n                    }\n                }\n            } else {\n                formData.append(key, product[key]);\n            }\n        });\n        const result = await ProductRepository.saveProduct(formData, auth.user.accessToken);\n        if (!result.error) {\n            router.push('/products');\n        } else {\n            openNotification(\"Error Message\", result.error, \"error\")\n        }\n    };\n    const initializeProduct = async () => {\n        if (route.query.productId) {\n            const fProduct = await ProductRepository.findById(route.query.productId);\n            console.log(fProduct.result);\n            if (!fProduct.error) {\n                setProduct({ ...product, ...fProduct.result });\n            }\n        }\n    }\n\n    const handleSetLogo = (logo) => {\n        const files = _.map(logo, 'originFileObj');\n        setProduct({ ...product, productImages: files });\n    };\n\n    useEffect(() => {\n        dispatch(toggleDrawerMenu(false));\n        initializeCategories();\n        initializeBrands();\n        initializeProduct();\n    }, []);\n    return (\n        <ContainerDefault title=\"Create new product\">\n            <HeaderDashboard\n                title=\"Create Product\"\n                description=\"Cyamunara Create New Product \"\n            />\n            <section className=\"ps-new-item\">\n                <Form\n                    className=\"ps-form ps-form--new-product\" onFinish={handleSubmit}>\n                    <div className=\"ps-form__content\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\n                                <figure className=\"ps-block--form-box\">\n                                    <figcaption>General</figcaption>\n                                    <div className=\"ps-block__content\">\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Product Name<sup>*</sup>\n                                            </label>\n                                            <Form.Item\n                                                name=\"title\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Please type Product name!',\n                                                    },\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    placeholder=\"Enter product name...\"\n                                                    initialValues={product.title}\n                                                    onChange={(e) => setProduct({ ...product, title: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Reference<sup>*</sup>\n                                            </label>\n\n                                            <Form.Item\n                                                name=\"slug\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Please type Slug!',\n                                                    },\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    value={product.slug}\n                                                    onChange={(e) => setProduct({ ...product, slug: e.target.value })}\n                                                    placeholder=\"Enter product Reference...\"\n                                                />\n                                            </Form.Item>\n\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Regular Price<sup>*</sup>\n                                            </label>\n\n                                            <Form.Item\n                                                name=\"price\"\n                                                rules={[\n                                                    { required: true, message: 'Enter price!', }, { min: 0, message: 'Minmum price is 0!' },\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"number\"\n                                                    placeholder=\"\"\n                                                    value={product.price}\n                                                    onChange={(e) => setProduct({ ...product, price: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>\n                                                Sale Price<sup>*</sup>\n                                            </label>\n                                            <Form.Item\n                                                name=\"salePrice\"\n                                                rules={[\n                                                    { required: true, min: 0, message: 'Enter sale price!', }, { min: 0, message: 'Minmum price is 0!' }\n                                                ]}>\n                                                <Input\n                                                    className=\"form-control\"\n                                                    type=\"number\"\n                                                    placeholder=\"\"\n                                                    value={product.salePrice}\n                                                    onChange={(e) => setProduct({ ...product, salePrice: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group d-flex\">\n                                            <Form.Item label=\"Is Hot\" name=\"isHot\">\n                                                <Input type=\"checkbox\" className=\"form-control\" checked={product.isHot} onChange={(e) => setProduct({ ...product, isHot: e.target.checked })} />\n                                            </Form.Item>\n                                            <Form.Item label=\"Is Featured\" name=\"isFeatured\">\n                                                <Input type=\"checkbox\" className='form-control' checked={product.isFeatured} onChange={(e) => setProduct({ ...product, isFeatured: e.target.checked })} />\n                                            </Form.Item>\n                                            <Form.Item label=\"Is Active\" name=\"isActive\">\n                                                <Input type=\"checkbox\" checked={product.isActive} onChange={(e) => setProduct({ ...product, isActive: e.target.checked })} />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Product Description</label>\n                                            <Form.Item name=\"description\">\n                                                <textarea\n                                                    className=\"form-control\"\n                                                    rows=\"6\"\n                                                    name=\"editordata\"></textarea>\n                                            </Form.Item>\n                                        </div>\n                                    </div>\n                                </figure>\n                            </div>\n                            <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\n                                <figure className=\"ps-block--form-box\">\n                                    <figcaption>Other info</figcaption>\n                                    <div className=\"ps-block__content\">\n                                        <div className=\"form-group\">\n                                            <label>Category</label>\n                                            <Form.Item\n                                                name=\"categoryId\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Select Product category!',\n                                                    },\n                                                ]}>\n                                                <select\n                                                    className=\"form-control\"\n                                                    value={product.categoryId}\n                                                    onChange={(e) => setProduct({ ...product, categoryId: e.target.value })}\n                                                    title=\"Status\">\n                                                    {\n                                                        categories.map((category, index) => {\n                                                            return <option key={index} value={category.id}>{category.name}</option>\n                                                        })\n                                                    }\n                                                </select>\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Brand</label>\n                                            <Form.Item\n                                                name=\"brandId\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Select Product Brand!',\n                                                    },\n                                                ]}>\n                                                <select\n                                                    className=\"form-control\"\n                                                    value={product.brandId}\n                                                    onChange={(e) => setProduct({ ...product, brandId: e.target.value })}\n                                                    title=\"Brand\">\n                                                    {\n                                                        brands.map((brand, index) => (\n                                                            <option key={index} value={brand.id}> {brand.name}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Manufacturer</label>\n                                            <Form.Item\n                                                name=\"manufacturer\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            'Enter Product Manufacturer!',\n                                                    },\n                                                ]}>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    placeholder=\"Enter manufacturer...\"\n                                                    value={product.manufacturer}\n                                                    onChange={(e) => setProduct({ ...product, manufacturer: e.target.value })}\n                                                />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Product Gallery</label>\n                                            <div className=\"form-group--nest\">\n                                                {/* <input\n                                                    className=\"form-control\"\n                                                    type=\"file\"\n                                                    multiple={true}\n                                                    onChange={(e) => setProduct({ ...product, productImages: e.target.files })}\n                                                />\n                                                <button className=\"ps-btn ps-btn--sm\">\n                                                    Choose\n                                                </button> */}\n                                                <div>\n                                                    <CardImageUploader multiple={true} onChange={handleSetLogo} number={8} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </figure>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"ps-form__bottom\">\n                        <a\n                            className=\"ps-btn ps-btn--black\"\n                            href=\"/products\">\n                            Back\n                        </a>\n                        <button className=\"ps-btn ps-btn--gray\">Cancel</button>\n                        <button className=\"ps-btn\" type='submit'>Submit</button>\n                    </div>\n                </Form>\n            </section>\n        </ContainerDefault>\n    );\n};\nexport default connect((state) => state)(CreateProductPage);"]},"metadata":{},"sourceType":"module"}