{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\n\nclass UserRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async register(payload) {\n    return await Repository.post(`${baseUrl}/vendor/signup`, payload).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async login(payload) {\n    return await Repository.post(`${baseUrl}/auth/login`, payload).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  } //get user profile by id with token\n\n\n  async getProfile(id, token) {\n    console.log(id, token);\n    return await Repository.get(`${baseUrl}/user/findUserInfo{userId}?userId=${id}`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n}\n\nexport default new UserRepository();","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/repositories/UserRepository.js"],"names":["Repository","baseUrl","UserRepository","constructor","callback","register","payload","post","then","response","data","catch","error","JSON","stringify","message","login","getProfile","id","token","console","log","get","headers","Authorization"],"mappings":"AAAA,OAAOA,UAAP,IAAoBC,OAApB,QAAkC,cAAlC;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAED,QAAMC,QAAN,CAAeC,OAAf,EAAwB;AACpB,WAAO,MAAMN,UAAU,CAACO,IAAX,CAAiB,GAAEN,OAAQ,gBAA3B,EAA4CK,OAA5C,EACRE,IADQ,CACFC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHQ,EAIRC,KAJQ,CAIDC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CAJE,CAAb;AAKH;;AAED,QAAMC,KAAN,CAAYV,OAAZ,EAAqB;AACjB,WAAO,MAAMN,UAAU,CAACO,IAAX,CAAiB,GAAEN,OAAQ,aAA3B,EAAyCK,OAAzC,EACZE,IADY,CACNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHY,EAIZC,KAJY,CAILC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CAJM,CAAb;AAKH,GAnBgB,CAqBjB;;;AACA,QAAME,UAAN,CAAiBC,EAAjB,EAAqBC,KAArB,EAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBC,KAAhB;AACA,WAAO,MAAMnB,UAAU,CAACsB,GAAX,CAAgB,GAAErB,OAAQ,qCAAoCiB,EAAG,EAAjE,EAAoE;AAC7EK,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL;AADV;AADoE,KAApE,EAKZX,IALY,CAKNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAPY,EAQZC,KARY,CAQLC,KAAD,KAAY;AAACA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAR,KAAZ,CARM,CAAb;AASH;;AAjCgB;;AAoCrB,eAAe,IAAIb,cAAJ,EAAf","sourcesContent":["import Repository, {baseUrl} from './Repository';\n\nclass UserRepository {\n    constructor(callback) {\n        this.callback = callback;\n    }\n\n    async register(payload) {\n        return await Repository.post(`${baseUrl}/vendor/signup`, payload)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n\n    async login(payload) {\n        return await Repository.post(`${baseUrl}/auth/login`, payload)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n\n    //get user profile by id with token\n    async getProfile(id, token) {\n        console.log(id, token);\n        return await Repository.get(`${baseUrl}/user/findUserInfo{userId}?userId=${id}`, {\n            headers: {\n                Authorization: token,\n            },\n        })\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({error: JSON.stringify(error.message)}));\n    }\n}\n\nexport default new UserRepository();\n"]},"metadata":{},"sourceType":"module"}