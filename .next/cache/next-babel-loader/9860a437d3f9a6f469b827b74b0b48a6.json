{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nexport function loginSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          data = JSON.parse(localStorage.getItem('ikimina'));\n          _context.next = 4;\n          return put(loginSuccess(data.data, data.accessToken));\n\n        case 4:\n          modalSuccess('success');\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\nexport function logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning('warning');\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/store/auth/saga.js"],"names":["loginSaga","logOutSaga","rootSaga","all","fork","put","takeEvery","notification","actionTypes","loginSuccess","logOutSuccess","modalSuccess","type","message","description","modalWarning","data","JSON","parse","localStorage","getItem","accessToken","console","log","LOGIN_REQUEST","LOGOUT"],"mappings":";;oDAmBiBA,S;qDAUAC,U;qDASQC,Q;;AAtCzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3BL,EAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,IAAD,EAAU;AAC3BL,EAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,OAAO,SAAUd,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOgB,UAAAA,IAFP,GAEcC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAFd;AAAA;AAGC,iBAAMf,GAAG,CAACI,YAAY,CAACO,IAAI,CAACA,IAAN,EAAWA,IAAI,CAACK,WAAhB,CAAb,CAAT;;AAHD;AAICV,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAJD;AAAA;;AAAA;AAAA;AAAA;AAMCW,UAAAA,OAAO,CAACC,GAAR;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAAUtB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMI,GAAG,CAACK,aAAa,EAAd,CAAT;;AAFD;AAGCK,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAHD;AAAA;;AAAA;AAAA;AAAA;AAKCO,UAAAA,OAAO,CAACC,GAAR;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,eAAe,SAAUrB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACgB,aAAb,EAA4BxB,SAA5B,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACiB,MAAb,EAAqBxB,UAArB,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nexport function* loginSaga() {\n    try {\n        const data = JSON.parse(localStorage.getItem('ikimina'));\n        yield put(loginSuccess(data.data,data.accessToken));\n        modalSuccess('success');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}