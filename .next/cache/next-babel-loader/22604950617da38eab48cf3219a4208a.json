{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport UserRepository from '~/repositories/UserRepository';\nimport VendorRepository from '~/repositories/VendorRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport CardImageUploader from '../cards/CardImageUploader';\n\nconst FormAccountSettings = ({\n  user\n}) => {\n  const [selectedUser, setSelectedUser] = React.useState({\n    id: null,\n    phoneNumber: '',\n    names: '',\n    address: '',\n    logo: '',\n    vendorId: user.id,\n    slug: '',\n    user: {\n      name: '',\n      username: '',\n      email: '',\n      category: ''\n    }\n  });\n\n  const handleSubmitUpdateSelectedUser = async () => {\n    //convert selectedUser data into formData with logo file\n    const formData = new FormData();\n    formData.append('id', selectedUser.id);\n    formData.append('phoneNumber', selectedUser.phoneNumber);\n    formData.append('names', selectedUser.names);\n    formData.append('address', selectedUser.address);\n    formData.append('logo', selectedUser.logo);\n    formData.append('slug', selectedUser.slug); //update user\n\n    switch (selectedUser.user.category) {\n      case 'VENDOR':\n        formData.append('vendorId', selectedUser.vendorId);\n        console.log(\"call\");\n        const response = await VendorRepository.updateVendor(formData, user.accessToken);\n        console.log(response);\n\n        if (!response.error) {\n          if (response) {\n            setSelectedUser(response.result);\n            openNotification('Success Message', 'Vendor updated successfully', 'success');\n          }\n        } else {\n          openNotification('Error Message', response.error, 'error');\n        }\n\n        break;\n\n      case 'CUSTOMER':\n        const responseCustomer = await UserRepository.updateCustomer(formData, user.accessToken);\n\n        if (!responseCustomer.error) {\n          if (responseCustomer) {\n            setSelectedUser(responseCustomer.result);\n            openNotification('Success Message', 'Customer updated successfully', 'success');\n          }\n        } else {\n          openNotification('Error Message', responseCustomer.error, 'error');\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    fetchUser();\n  };\n\n  const fetchUser = async () => {\n    const response = await UserRepository.getProfile(user.data.user.id, user.accessToken);\n\n    if (!response.error) {\n      if (response) setSelectedUser(response.result);\n    } else {\n      openNotification('Error Message', response.error, 'error');\n    }\n  };\n\n  const handleSetLogo = logo => {\n    setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n      logo: logo[0].originFileObj\n    }));\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, [user]);\n  return /*#__PURE__*/_jsxs(\"form\", {\n    className: \"ps-form--account-settings\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Full Name\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              names: e.target.value\n            })),\n            value: selectedUser.names\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Display Name\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            disabled: true,\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              user: _objectSpread(_objectSpread({}, selectedUser.user), {}, {\n                name: e.target.value\n              })\n            })),\n            value: selectedUser.user.username\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Email\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              user: _objectSpread(_objectSpread({}, selectedUser.user), {}, {\n                email: e.target.value\n              })\n            })),\n            value: selectedUser.user.email\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Phone Number\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              phoneNumber: e.target.value\n            })),\n            value: selectedUser.phoneNumber\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Role\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            disabled: true,\n            value: selectedUser.user.category\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Address\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"\",\n            onInput: e => setSelectedUser(_objectSpread(_objectSpread({}, selectedUser), {}, {\n              address: e.target.value\n            })),\n            value: selectedUser.address\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-sm-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Bio\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            className: \"form-control\",\n            rows: \"6\",\n            placeholder: \"\"\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(CardImageUploader, {\n        onChange: handleSetLogo,\n        number: 1\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"ps-form__submit text-center\",\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        className: \"ps-btn ps-btn--gray mr-3\",\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        onClick: handleSubmitUpdateSelectedUser,\n        className: \"ps-btn success\",\n        children: \"Update Profile\"\n      })]\n    })]\n  });\n};\n\nexport default FormAccountSettings;","map":null,"metadata":{},"sourceType":"module"}