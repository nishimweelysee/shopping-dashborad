{"ast":null,"code":"import { all, fork, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nexport function* loginSaga() {\n  try {\n    const data = JSON.parse(localStorage.getItem('ikimina'));\n    const jwtPayload = JSON.parse(window.atob(data.accessToken.split('.')[1]));\n    console.log(data);\n    console.log(jwtPayload);\n    yield put(loginSuccess(data.data, data.accessToken));\n    modalSuccess('success');\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/store/auth/saga.js"],"names":["all","fork","put","takeEvery","notification","actionTypes","loginSuccess","logOutSuccess","modalSuccess","type","message","description","modalWarning","loginSaga","data","JSON","parse","localStorage","getItem","jwtPayload","window","atob","accessToken","split","console","log","err","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3BL,EAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAIH,IAAD,IAAU;AAC3BL,EAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,OAAO,UAAUE,SAAV,GAAsB;AACzB,MAAI;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,UAAMC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWI,MAAM,CAACC,IAAP,CAAYP,IAAI,CAACQ,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAZ,CAAX,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACA,UAAMjB,GAAG,CAACI,YAAY,CAACQ,IAAI,CAACA,IAAN,EAAWA,IAAI,CAACQ,WAAhB,CAAb,CAAT;AACAd,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAPD,CAOE,OAAOkB,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ;AAED,OAAO,UAAUC,UAAV,GAAuB;AAC1B,MAAI;AACA,UAAMzB,GAAG,CAACK,aAAa,EAAd,CAAT;AACAK,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAGE,OAAOc,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ;AAED,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAM5B,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACwB,aAAb,EAA4BhB,SAA5B,CAAV,CAAD,CAAT;AACA,QAAMb,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACyB,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, fork, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nexport function* loginSaga() {\n    try {\n        const data = JSON.parse(localStorage.getItem('ikimina'));\n        const jwtPayload = JSON.parse(window.atob(data.accessToken.split('.')[1]));\n        console.log(data);\n        console.log(jwtPayload);\n        yield put(loginSuccess(data.data,data.accessToken));\n        modalSuccess('success');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}