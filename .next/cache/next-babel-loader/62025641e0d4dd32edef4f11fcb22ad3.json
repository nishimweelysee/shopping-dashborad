{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/partials/vendors/create.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport VendorRepository from '~/repositories/VendorRepository';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", values => {\n      VendorRepository.updateVendor(values).then(res => {\n        if (res.error) {\n          openNotification('Error Message', res.error, 'error');\n        } else {\n          openNotification('Success Message', res.message, 'success');\n        }\n      });\n    });\n\n    this.state = {\n      vendor: this.props.vendor\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-my-account\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"ps-form--account\",\n          onFinish: e => this.handleSubmit(e),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ps-tab active\",\n            id: \"register\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ps-form__content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Register An Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"names\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input your Name!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control\",\n                    type: \"text\",\n                    placeholder: \"names\",\n                    value: this.state.vendor.names,\n                    onChange: e => this.setState({\n                      vendor: _objectSpread(_objectSpread({}, this.state.vendor), {}, {\n                        names: e.target.value\n                      })\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"email\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input your email!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control\",\n                    type: \"email\",\n                    placeholder: \"Email address\",\n                    value: this.state.vendor.email,\n                    onChange: e => this.setState({\n                      vendor: _objectSpread(_objectSpread({}, this.state.vendor), {}, {\n                        email: e.target.value\n                      })\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"phoneNumber\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input your phone number!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control\",\n                    type: \"tel\",\n                    placeholder: \"Phone number\",\n                    value: this.state.vendor.phoneNumber,\n                    onChange: e => this.setState({\n                      vendor: _objectSpread(_objectSpread({}, this.state.vendor), {}, {\n                        phoneNumber: e.target.value\n                      })\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"username\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input your username!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control\",\n                    type: \"text\",\n                    placeholder: \"User name\",\n                    value: this.state.vendor.username,\n                    onChange: e => this.setState({\n                      vendor: _objectSpread(_objectSpread({}, this.state.vendor), {}, {\n                        username: e.target.value\n                      })\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"address\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input your address!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control\",\n                    type: \"text\",\n                    placeholder: \"Address\",\n                    value: this.state.vendor.address,\n                    onChange: e => this.setState({\n                      vendor: _objectSpread(_objectSpread({}, this.state.vendor), {}, {\n                        address: e.target.value\n                      })\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group submit\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"ps-btn ps-btn--fullwidth\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.auth;\n};\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/partials/vendors/create.jsx"],"names":["React","Component","Form","Input","connect","openNotification","VendorRepository","Register","constructor","props","values","updateVendor","then","res","error","message","state","vendor","render","e","handleSubmit","required","names","setState","target","value","email","phoneNumber","username","address","mapStateToProps","auth"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CAOJC,MAAM,IAAI;AACrBJ,MAAAA,gBAAgB,CAACK,YAAjB,CAA8BD,MAA9B,EAAsCE,IAAtC,CAA4CC,GAAD,IAAS;AAChD,YAAIA,GAAG,CAACC,KAAR,EAAe;AACXT,UAAAA,gBAAgB,CAAC,eAAD,EAAiBQ,GAAG,CAACC,KAArB,EAA4B,OAA5B,CAAhB;AACH,SAFD,MAEO;AACHT,UAAAA,gBAAgB,CAAC,iBAAD,EAAmBQ,GAAG,CAACE,OAAvB,EAAgC,SAAhC,CAAhB;AACH;AACJ,OAND;AAOH,KAfkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ;AADV,KAAb;AAGH;;AAYDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,SAAS,EAAC,kBADd;AAEI,UAAA,QAAQ,EAAEC,CAAC,IAAE,KAAKC,YAAL,CAAkBD,CAAlB,CAFjB;AAAA,iCAGI;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,EAAE,EAAC,UAAlC;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI,QAAC,IAAD,CAAM,IAAN;AACI,kBAAA,IAAI,EAAC,OADT;AAEI,kBAAA,KAAK,EAAE,CACH;AACIE,oBAAAA,QAAQ,EAAE,IADd;AAEIN,oBAAAA,OAAO,EACH;AAHR,mBADG,CAFX;AAAA,yCASI,QAAC,KAAD;AACI,oBAAA,SAAS,EAAC,cADd;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,WAAW,EAAC,OAHhB;AAII,oBAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBK,KAJ7B;AAKI,oBAAA,QAAQ,EAAEH,CAAC,IAAI,KAAKI,QAAL,CAAc;AAAEN,sBAAAA,MAAM,kCAAO,KAAKD,KAAL,CAAWC,MAAlB;AAA0BK,wBAAAA,KAAK,EAAEH,CAAC,CAACK,MAAF,CAASC;AAA1C;AAAR,qBAAd;AALnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAqBI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI,QAAC,IAAD,CAAM,IAAN;AACI,kBAAA,IAAI,EAAC,OADT;AAEI,kBAAA,KAAK,EAAE,CACH;AACIJ,oBAAAA,QAAQ,EAAE,IADd;AAEIN,oBAAAA,OAAO,EACH;AAHR,mBADG,CAFX;AAAA,yCASI,QAAC,KAAD;AACI,oBAAA,SAAS,EAAC,cADd;AAEI,oBAAA,IAAI,EAAC,OAFT;AAGI,oBAAA,WAAW,EAAC,eAHhB;AAII,oBAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBS,KAJ7B;AAKI,oBAAA,QAAQ,EAAEP,CAAC,IAAI,KAAKI,QAAL,CAAc;AAAEN,sBAAAA,MAAM,kCAAO,KAAKD,KAAL,CAAWC,MAAlB;AAA0BS,wBAAAA,KAAK,EAAEP,CAAC,CAACK,MAAF,CAASC;AAA1C;AAAR,qBAAd;AALnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBArBJ,eAwCI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI,QAAC,IAAD,CAAM,IAAN;AACI,kBAAA,IAAI,EAAC,aADT;AAEI,kBAAA,KAAK,EAAE,CACH;AACIJ,oBAAAA,QAAQ,EAAE,IADd;AAEIN,oBAAAA,OAAO,EACH;AAHR,mBADG,CAFX;AAAA,yCASI,QAAC,KAAD;AACI,oBAAA,SAAS,EAAC,cADd;AAEI,oBAAA,IAAI,EAAC,KAFT;AAGI,oBAAA,WAAW,EAAC,cAHhB;AAII,oBAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBU,WAJ7B;AAKI,oBAAA,QAAQ,EAAER,CAAC,IAAI,KAAKI,QAAL,CAAc;AAAEN,sBAAAA,MAAM,kCAAO,KAAKD,KAAL,CAAWC,MAAlB;AAA0BU,wBAAAA,WAAW,EAAER,CAAC,CAACK,MAAF,CAASC;AAAhD;AAAR,qBAAd;AALnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAxCJ,eA2DI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI,QAAC,IAAD,CAAM,IAAN;AACI,kBAAA,IAAI,EAAC,UADT;AAEI,kBAAA,KAAK,EAAE,CACH;AACIJ,oBAAAA,QAAQ,EAAE,IADd;AAEIN,oBAAAA,OAAO,EACH;AAHR,mBADG,CAFX;AAAA,yCASI,QAAC,KAAD;AACI,oBAAA,SAAS,EAAC,cADd;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,WAAW,EAAC,WAHhB;AAII,oBAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBW,QAJ7B;AAKI,oBAAA,QAAQ,EAAET,CAAC,IAAI,KAAKI,QAAL,CAAc;AAAEN,sBAAAA,MAAM,kCAAO,KAAKD,KAAL,CAAWC,MAAlB;AAA0BW,wBAAAA,QAAQ,EAAET,CAAC,CAACK,MAAF,CAASC;AAA7C;AAAR,qBAAd;AALnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA3DJ,eA8EI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI,QAAC,IAAD,CAAM,IAAN;AACI,kBAAA,IAAI,EAAC,SADT;AAEI,kBAAA,KAAK,EAAE,CACH;AACIJ,oBAAAA,QAAQ,EAAE,IADd;AAEIN,oBAAAA,OAAO,EACH;AAHR,mBADG,CAFX;AAAA,yCASI,QAAC,KAAD;AACI,oBAAA,SAAS,EAAC,cADd;AAEI,oBAAA,IAAI,EAAC,MAFT;AAGI,oBAAA,WAAW,EAAC,SAHhB;AAII,oBAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBY,OAJ7B;AAKI,oBAAA,QAAQ,EAAEV,CAAC,IAAI,KAAKI,QAAL,CAAc;AAAEN,sBAAAA,MAAM,kCAAO,KAAKD,KAAL,CAAWC,MAAlB;AAA0BY,wBAAAA,OAAO,EAAEV,CAAC,CAACK,MAAF,CAASC;AAA5C;AAAR,qBAAd;AALnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA9EJ,eAiGI;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,uCACI;AACI,kBAAA,IAAI,EAAC,QADT;AAEI,kBAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAjGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqHH;;AAxI4B;;AA2IjC,MAAMK,eAAe,GAAGd,KAAK,IAAI;AAC7B,SAAOA,KAAK,CAACe,IAAb;AACH,CAFD;;AAGA,eAAe3B,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { Form, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { openNotification } from '~/utilities/notification-helpers';\nimport VendorRepository from '~/repositories/VendorRepository';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            vendor: this.props.vendor,\n        }\n    }\n\n    handleSubmit = values => {\n        VendorRepository.updateVendor(values).then((res) => {\n            if (res.error) {\n                openNotification('Error Message',res.error, 'error')\n            } else {\n                openNotification('Success Message',res.message, 'success')\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"ps-my-account\">\n                <div className=\"container\">\n                    <Form\n                        className=\"ps-form--account\"\n                        onFinish={e=>this.handleSubmit(e)}>\n                        <div className=\"ps-tab active\" id=\"register\">\n                            <div className=\"ps-form__content\">\n                                <h5>Register An Account</h5>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"names\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your Name!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            placeholder=\"names\"\n                                            value={this.state.vendor.names}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, names: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"email\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your email!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"email\"\n                                            placeholder=\"Email address\"\n                                            value={this.state.vendor.email}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, email: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"phoneNumber\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your phone number!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"tel\"\n                                            placeholder=\"Phone number\"\n                                            value={this.state.vendor.phoneNumber}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, phoneNumber: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"username\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your username!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            placeholder=\"User name\"\n                                            value={this.state.vendor.username}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, username: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Form.Item\n                                        name=\"address\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    'Please input your address!',\n                                            },\n                                        ]}>\n                                        <Input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            placeholder=\"Address\"\n                                            value={this.state.vendor.address}\n                                            onChange={e => this.setState({ vendor: { ...this.state.vendor, address: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </div>\n                                <div className=\"form-group submit\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"ps-btn ps-btn--fullwidth\">\n                                        Update\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return state.auth;\n};\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}