{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\n\nclass VendorRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async findAll(page, size, token) {\n    return await Repository.get(`${baseUrl}/admin/all?page=${page}&size=${size}`, {\n      headers: {\n        Authorization: `${token}`\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async findById(payload, token) {\n    return await Repository.get(`${baseUrl}/client/findById{id}?id${payload}`, {\n      headers: {\n        Authorization: `${token}`\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n}\n\nexport default new VendorRepository();","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/repositories/CustomerRepository.js"],"names":["Repository","baseUrl","VendorRepository","constructor","callback","findAll","page","size","token","get","headers","Authorization","then","response","data","catch","error","JSON","stringify","message","findById","payload"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,OAArB,QAAoC,cAApC;;AAEA,MAAMC,gBAAN,CAAuB;AACnBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAED,QAAMC,OAAN,CAAcC,IAAd,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAC7B,WAAO,MAAMR,UAAU,CAACS,GAAX,CAAgB,GAAER,OAAQ,mBAAkBK,IAAK,SAAQC,IAAK,EAA9D,EAAiE;AAC1EG,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,GAAEH,KAAM;AADnB;AADiE,KAAjE,EAKRI,IALQ,CAKFC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAPQ,EAQRC,KARQ,CAQDC,KAAD,KAAY;AAAEA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAT,KAAZ,CARE,CAAb;AASH;;AAED,QAAMC,QAAN,CAAeC,OAAf,EAAuBb,KAAvB,EAA8B;AAC1B,WAAO,MAAMR,UAAU,CAACS,GAAX,CAAgB,GAAER,OAAQ,0BAAyBoB,OAAQ,EAA3D,EAA8D;AACvEX,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,GAAEH,KAAM;AADnB;AAD8D,KAA9D,EAKZI,IALY,CAKNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAPY,EAQZC,KARY,CAQLC,KAAD,KAAY;AAAEA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,OAArB;AAAT,KAAZ,CARM,CAAb;AASH;;AA3BkB;;AA8BvB,eAAe,IAAIjB,gBAAJ,EAAf","sourcesContent":["import Repository, { baseUrl } from './Repository';\n\nclass VendorRepository {\n    constructor(callback) {\n        this.callback = callback;\n    }\n\n    async findAll(page, size, token) {\n        return await Repository.get(`${baseUrl}/admin/all?page=${page}&size=${size}`, {\n            headers: {\n                Authorization: `${token}`\n            }\n        })\n            .then((response) => {\n                return response.data;\n            })\n            .catch((error) => ({ error: JSON.stringify(error.message) }));\n    }\n\n    async findById(payload,token) {\n        return await Repository.get(`${baseUrl}/client/findById{id}?id${payload}`, {\n            headers: {\n                Authorization: `${token}`\n            }\n        })\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => ({ error: JSON.stringify(error.message) }));\n    }\n}\n\nexport default new VendorRepository();\n"]},"metadata":{},"sourceType":"module"}