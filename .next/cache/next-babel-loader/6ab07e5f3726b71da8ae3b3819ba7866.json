{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\n\nclass CategoryRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async findTopCategory() {\n    return await Repository.get(`${baseUrl}/category/findTopCategory`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async findCategoryByParentId(parentId) {\n    return await Repository.get(`${baseUrl}/category/findCategoryByParentId{parentId}?parentId=${parentId}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async findById(categoryId) {\n    return await Repository.get(`${baseUrl}/category/findCategoryById{categoryId}?categoryId=${categoryId}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n  async saveCategory(payload) {\n    console.log(payload);\n    return await Repository.post(`${baseUrl}/category/save`, payload).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error.message)\n    }));\n  }\n\n}\n\nexport default new CategoryRepository();","map":null,"metadata":{},"sourceType":"module"}