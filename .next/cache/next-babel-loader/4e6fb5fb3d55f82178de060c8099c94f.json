{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/shared/forms/FormCreateProductBrands.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\n\nconst FormCreateProductBrands = props => {\n  const {\n    0: productBrand,\n    1: setProductBrand\n  } = useState(_objectSpread({}, props.selectedBrand));\n\n  const handleSaveProductBrand = async () => {\n    const res = await ProductBrandRepository.saveProductBrand(productBrand);\n\n    if (!res.error) {\n      openNotification(\"Success Message\", res.messages && res.messages[0], \"success\");\n      return props.initializeProductBrands();\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedBrand) {\n      setProductBrand(_objectSpread({}, props.selectedBrand));\n    }\n  }, [props.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ps-form ps-form--new\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-form__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: productBrand.name,\n          onInput: e => setProductBrand(_objectSpread(_objectSpread({}, productBrand), {}, {\n            name: e.target.value\n          })),\n          type: \"text\",\n          placeholder: \"Enter productBrand name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Slug\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: productBrand.slug,\n          onInput: e => setProductBrand(_objectSpread(_objectSpread({}, productBrand), {}, {\n            slug: e.target.value\n          })),\n          type: \"text\",\n          placeholder: \"Enter productBrand slug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-form__bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ps-btn ps-btn--gray\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ps-btn ps-btn--sumbit success\",\n        type: \"button\",\n        onClick: handleSaveProductBrand,\n        children: productBrand.id == null ? \"Add new\" : \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\nexport default FormCreateProductBrands;","map":{"version":3,"sources":["/Users/nishimweelysee/Desktop/eshopping/martfury-admin-react/components/shared/forms/FormCreateProductBrands.jsx"],"names":["React","useEffect","useState","ProductBrandRepository","openNotification","FormCreateProductBrands","props","productBrand","setProductBrand","selectedBrand","handleSaveProductBrand","res","saveProductBrand","error","messages","initializeProductBrands","name","e","target","value","slug","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAK;AAAA,OAACC,YAAD;AAAA,OAAcC;AAAd,MAAiCN,QAAQ,mBAAKI,KAAK,CAACG,aAAX,EAA9C;;AACA,QAAMC,sBAAsB,GAAG,YAAS;AACpC,UAAMC,GAAG,GAAG,MAAMR,sBAAsB,CAACS,gBAAvB,CAAwCL,YAAxC,CAAlB;;AACA,QAAG,CAACI,GAAG,CAACE,KAAR,EAAc;AACVT,MAAAA,gBAAgB,CAAC,iBAAD,EAAmBO,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAa,CAAb,CAAnC,EAAmD,SAAnD,CAAhB;AACA,aAAOR,KAAK,CAACS,uBAAN,EAAP;AACH;AACJ,GAND;;AAOAd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,KAAK,CAACG,aAAT,EAAuB;AACnBD,MAAAA,eAAe,mBAAKF,KAAK,CAACG,aAAX,EAAf;AACH;AACJ,GAJQ,EAIP,CAACH,KAAK,CAACG,aAAP,CAJO,CAAT;AAKA,sBACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,0CACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEF,YAAY,CAACS,IAFxB;AAGI,UAAA,OAAO,EAAEC,CAAC,IAAET,eAAe,iCAAKD,YAAL;AAAkBS,YAAAA,IAAI,EAACC,CAAC,CAACC,MAAF,CAASC;AAAhC,aAH/B;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,0CACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEZ,YAAY,CAACa,IAFxB;AAGI,UAAA,OAAO,EAAEH,CAAC,IAAET,eAAe,iCAAKD,YAAL;AAAkBa,YAAAA,IAAI,EAACH,CAAC,CAACC,MAAF,CAASC;AAAhC,aAH/B;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2BI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAkD,QAAA,IAAI,EAAC,QAAvD;AAAgE,QAAA,OAAO,EAAET,sBAAzE;AAAA,kBACKH,YAAY,CAACc,EAAb,IAAiB,IAAjB,GAAsB,SAAtB,GAAgC;AADrC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAlDD;;AAoDA,eAAehB,uBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ProductBrandRepository from '~/repositories/ProductBrandRepository';\nimport { openNotification } from '~/utilities/notification-helpers';\n\nconst FormCreateProductBrands = (props) => {\n    const[productBrand,setProductBrand] = useState({...props.selectedBrand});\n    const handleSaveProductBrand = async()=>{\n        const res = await ProductBrandRepository.saveProductBrand(productBrand);\n        if(!res.error){\n            openNotification(\"Success Message\",res.messages && res.messages[0],\"success\");\n            return props.initializeProductBrands();\n        }\n    }\n    useEffect(()=>{\n        if(props.selectedBrand){\n            setProductBrand({...props.selectedBrand})\n        }\n    },[props.selectedBrand])\n    return (\n        <form className=\"ps-form ps-form--new\" >\n            <div className=\"ps-form__content\">\n                <div className=\"form-group\">\n                    <label>\n                        Name<sup>*</sup>\n                    </label>\n                    <input\n                        className=\"form-control\"\n                        value={productBrand.name}\n                        onInput={e=>setProductBrand({...productBrand,name:e.target.value})}\n                        type=\"text\"\n                        placeholder=\"Enter productBrand name\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Slug<sup>*</sup>\n                    </label>\n                    <input\n                        className=\"form-control\"\n                        value={productBrand.slug}\n                        onInput={e=>setProductBrand({...productBrand,slug:e.target.value})}\n                        type=\"text\"\n                        placeholder=\"Enter productBrand slug\"\n                    />\n                </div>\n            </div>\n            <div className=\"ps-form__bottom\">\n                <button className=\"ps-btn ps-btn--gray\">Reset</button>\n                <button className=\"ps-btn ps-btn--sumbit success\" type='button' onClick={handleSaveProductBrand}>\n                    {productBrand.id==null?\"Add new\":\"Update\"}\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default FormCreateProductBrands;\n"]},"metadata":{},"sourceType":"module"}